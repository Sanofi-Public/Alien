Search.setIndex({"docnames": ["active_learning", "alien", "alien.benchmarks", "alien.data", "alien.models", "alien.models.keras", "alien.models.pytorch", "alien.sample_generation", "alien.selection", "docs", "index", "installation", "modules"], "filenames": ["active_learning.rst", "alien.rst", "alien.benchmarks.rst", "alien.data.rst", "alien.models.rst", "alien.models.keras.rst", "alien.models.pytorch.rst", "alien.sample_generation.rst", "alien.selection.rst", "docs.rst", "index.rst", "installation.rst", "modules.rst"], "titles": ["What is active learning?", "alien package", "alien.benchmarks", "alien.data", "alien.models", "alien.models.keras package", "alien.models.pytorch package", "alien.sample_generation", "alien.selection", "docs package", "<strong>ALIEN</strong>", "Installation", "alien"], "terms": {"an": [0, 1, 2, 3, 4, 5, 6, 7, 8], "approach": 0, "data": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12], "acquisit": [0, 8], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10], "get": [0, 1, 3, 4, 6, 10, 12], "u": [0, 1], "better": [0, 2], "model": [0, 1, 2, 8, 10, 12], "less": [0, 1, 8], "label": [0, 1, 2, 3, 4, 7, 8, 10], "doesn": 0, "t": [0, 1, 2, 3, 4, 5, 6, 7, 8], "just": [0, 1, 2, 3, 4, 5, 6, 8], "select": [0, 1, 2, 4, 5, 6, 10, 12], "most": [0, 2, 4, 5, 6, 8, 10], "promis": 0, "candid": [0, 8], "next": [0, 8, 10], "batch": [0, 1, 2, 3, 4, 5, 6, 8, 10], "It": [0, 2, 4, 6, 7], "also": [0, 1, 2, 3, 4, 5, 6, 8], "priorit": 0, "would": [0, 2, 4, 5, 6, 8], "inform": [0, 2, 8], "e": [0, 1, 2, 3, 4, 5, 6, 8, 10], "improv": [0, 2, 8], "our": [0, 4], "best": [0, 2, 4], "ultim": [0, 7, 8], "lead": 0, "find": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10], "sooner": 0, "given": [0, 1, 2, 3, 4, 5, 6, 7, 8], "fix": [0, 5, 6], "architectur": [0, 6, 8], "eg": [0, 1, 2, 3, 4, 7, 8, 10], "number": [0, 1, 2, 3, 4, 5, 6, 8, 10], "layer": [0, 4, 5, 6, 8], "type": [0, 1, 2, 3, 4, 5, 7], "neuron": 0, "connect": 0, "machin": [0, 10], "fit": [0, 1, 2, 4, 5, 6, 8], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8], "With": 0, "limit": [0, 1, 2, 6, 8], "we": [0, 1, 2, 4, 5, 6, 7, 8, 10], "have": [0, 1, 2, 4, 5, 6, 8, 10], "confid": [0, 2], "precis": [0, 2], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12], "In": [0, 1, 2, 3, 4, 8, 10, 11], "ideal": 0, "bayesian": [0, 4], "case": [0, 1, 4, 5, 6, 8, 10], "give": [0, 1, 2, 4, 5, 6, 8, 10], "rather": [0, 2, 7, 8], "posterior": [0, 4, 5, 6], "distribut": [0, 1, 2, 4, 5, 6, 7, 8], "space": [0, 1, 4, 5, 6, 8], "mani": [0, 2, 4, 8], "strategi": [0, 8, 10], "sampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10], "whose": [0, 3, 6], "reduc": [0, 8], "uncertainti": [0, 2, 4, 5, 6, 8, 10], "benchmark": [1, 4, 10, 12], "metric": [1, 8, 10, 12], "conf_int": [1, 2], "sem": [1, 2], "score": [1, 2, 8], "default_filenam": [1, 2], "append": [1, 2, 3], "save": [1, 2, 4, 5, 6], "load": [1, 2, 3, 4, 5, 6], "load_mani": [1, 2], "average_run": [1, 2], "topscor": [1, 2], "comput": [1, 2, 4, 5, 6, 8, 10], "rmse": [1, 2], "from_fold": [1, 2], "scatter": [1, 2], "plot": [1, 2], "plot_scor": [1, 2], "oracl": [1, 10, 12], "get_label": [1, 2], "setoracl": [1, 2], "generate_sampl": [1, 2, 7], "remove_data_indic": [1, 2, 7], "remove_sampl": [1, 2, 7], "reshuffl": [1, 2, 3, 7], "retrospect": [1, 4, 10, 12], "run_experi": [1, 2], "uncertainty_metr": [1, 10, 12], "kl_diverg": [1, 2], "best_multipl": [1, 2], "binary_optim": [1, 2], "search_low": [1, 2], "search_upp": [1, 2], "plot_error": [1, 2], "dataset": [1, 2, 4, 5, 6, 7, 8, 10, 12], "from_data": [1, 3], "x": [1, 2, 3, 4, 5, 6, 7, 8], "y": [1, 2, 3, 4, 5, 6, 7, 8], "check_xi": [1, 3], "shape": [1, 3, 4, 5, 6, 7], "ndim": [1, 3, 4, 5, 6], "batch_shap": [1, 3], "feature_shap": [1, 3], "reshap": [1, 3, 12], "teachabledataset": [1, 3], "extend": [1, 3], "from_deepchem": [1, 3], "get_shuffl": [1, 3], "teachablewrapperdataset": [1, 3], "reshape_featur": [1, 3], "reshape_batch": [1, 3], "shuffleddataset": [1, 3], "extend_shuffl": [1, 3], "compute_bdim": [1, 3], "arraydataset": [1, 3], "numpydataset": [1, 3], "torchdataset": [1, 3], "dictdataset": [1, 3], "tupledataset": [1, 3], "tupl": [1, 2, 3, 4, 5, 6], "deepchem": [1, 2, 4, 10, 11, 12], "deepchemdataset": [1, 3], "get_featur": [1, 3], "from_csv": [1, 3], "from_df": [1, 3], "as_dcdataset": [1, 3], "deep": [1, 10, 11, 12], "learn": [1, 2, 8, 10, 11, 12], "how": [1, 2, 6, 8, 10, 12], "choos": [1, 6, 10, 12], "gradient": [1, 10, 12], "boost": [1, 10, 12], "other": [1, 2, 3, 5, 6, 8, 10, 12], "abstract": [1, 2, 3, 6, 7, 8, 10, 12], "base": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12], "predict": [1, 2, 3, 4, 5, 6, 8, 10], "predict_sampl": [1, 4, 5, 6], "fit_model": [1, 4, 5, 6], "fit_uncertainti": [1, 4, 5, 6], "initi": [1, 2, 3, 4, 5, 6, 7], "regressor": [1, 4], "covarianceregressor": [1, 4, 8], "covari": [1, 2, 4, 5, 6, 8], "predict_ensembl": [1, 4, 5, 6], "std_dev": [1, 2, 4, 5, 6, 8], "ensembleregressor": [1, 4], "covariance_ensembl": [1, 4, 5, 6], "std_dev_ensembl": [1, 4, 5, 6], "sample_gener": [1, 8, 10, 12], "filter_gener": [1, 10, 12], "filter": [1, 7], "from_set": [1, 10, 12], "setsamplegener": [1, 2, 7], "wrappedgener": [1, 7], "gener": [1, 2, 3, 8, 10, 12], "samplegener": [1, 7, 8], "random_gener": [1, 10, 12], "uniformsamplegener": [1, 7], "randomsamplegener": [1, 7], "transform": [1, 10, 12], "transformedsamplegener": [1, 7], "sampleselector": [1, 2, 10, 12], "covarianceselector": [1, 4, 10, 12], "get_prefilt": [1, 8], "model_predict": [1, 8], "prediction_prior": [1, 8], "baitselector": [1, 10, 12], "kmeansselector": [1, 10, 12], "randomselector": [1, 10, 12], "timestampselector": [1, 10, 12], "parent_loc": [1, 12], "sourc": [1, 2, 3, 4, 5, 6, 7, 8], "final": [1, 8, 12], "fn": [1, 2, 6], "method": [1, 3, 4, 5, 6, 8], "prohibit": 1, "subclass": [1, 4, 5, 6, 8, 10], "from": [1, 2, 3, 4, 5, 6, 7, 8], "overrid": [1, 12], "unless": 1, "i": [1, 2, 3, 4, 5, 6, 7, 8, 10], "thi": [1, 2, 3, 4, 5, 6, 7, 8], "actual": [1, 2, 5, 6, 8], "enforc": 1, "dure": [1, 7], "creation": 1, "unlik": 1, "python": [1, 3, 7], "": [1, 2, 3, 4, 5, 6, 7, 8, 10], "onli": [1, 2, 4, 5, 6, 8], "us": [1, 2, 3, 4, 5, 6, 7, 8, 10], "extern": [1, 4], "checker": 1, "version": [1, 2, 3, 6, 7, 11], "doe": [1, 2, 4], "appli": [1, 4, 5, 6, 8], "so": [1, 2, 4, 6, 7, 8], "need": [1, 2, 3, 4, 5, 6, 8, 12], "both": [1, 7], "allow": [1, 7], "init_subclass": [1, 12], "superclass": [1, 4], "kwarg": [1, 2, 3, 4, 5, 6, 7, 8], "abstract_group": [1, 12], "id": [1, 2, 3], "n": [1, 2, 4, 5, 6, 7, 8, 10], "1": [1, 2, 3, 4, 5, 6, 7, 8], "group": 1, "least": [1, 8], "typic": [1, 2, 7], "them": [1, 3, 6, 8, 10], "must": [1, 2, 4, 6, 7, 8], "overriden": 1, "each": [1, 2, 3, 4, 5, 6, 7, 8], "determin": [1, 3, 4, 6, 7, 8], "its": [1, 4, 5, 6, 8], "hashabl": 1, "kei": [1, 3, 8, 12], "default_decor": [1, 12], "dec": 1, "enhanc": 1, "parametr": [1, 7], "follow": [1, 2, 8], "function": [1, 2, 3, 5, 6, 7, 8, 10], "If": [1, 2, 3, 4, 5, 6, 7, 8], "directli": [1, 2, 4, 5, 6], "without": [1, 8, 11], "ani": [1, 2, 3, 4, 5, 6, 7, 8, 11], "specifi": [1, 2, 3, 4, 5, 6, 8], "usual": [1, 2, 3, 7], "wai": [1, 2, 4, 7, 8], "default": [1, 2, 3, 4, 5, 6, 8], "pass": [1, 2, 3, 4, 6, 7, 8], "return": [1, 2, 3, 4, 5, 6, 7, 8], "new": [1, 3, 10], "abl": 1, "accept": [1, 4], "word": [1, 2], "b": 1, "2": [1, 2, 6, 8], "def": 1, "behaviour": [1, 4, 5, 6, 8], "3": [1, 8], "4": [1, 2], "flatten_batch": [1, 4, 5, 6, 12], "arg": [1, 2, 3, 7, 8], "get_arg": [1, 12], "other_fn": 1, "none": [1, 2, 3, 4, 5, 6, 7, 8], "exclud": 1, "do_norm": [1, 12], "bdim": [1, 3], "euclidean": [1, 8], "fals": [1, 2, 3, 4, 5, 6, 7, 8], "sig_append": [1, 12], "name": [1, 2, 3, 6, 7], "kind": [1, 4], "_parameterkind": 1, "keyword_onli": 1, "annot": 1, "signatur": 1, "normalize_arg": [1, 12], "get_xi": [1, 12], "ensur": [1, 8], "appropri": [1, 2, 4], "A": [1, 3, 4, 5, 6, 8, 10], "can": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11], "assum": [1, 2, 6], "argument": [1, 2, 3, 4, 6, 7, 8], "nontrivi": 1, "drawn": [1, 2, 8], "ar": [1, 2, 3, 4, 5, 6, 7, 8, 10], "don": [1, 2, 7], "count": 1, "all": [1, 2, 3, 4, 5, 6, 7, 8], "well": [1, 4, 5, 6, 8], "neither": 1, "wrapper": [1, 3, 4, 5, 6, 7, 10], "look": [1, 2, 3, 4, 5, 6, 8], "self": [1, 2, 3, 4, 5, 6, 7, 8], "found": [1, 3], "treat": [1, 4, 5, 6], "combin": [1, 4, 5, 6, 8], "tri": 1, "split": [1, 2], "fail": [1, 2], "take": [1, 2, 3, 6, 7, 8], "accomplish": 1, "rais": [1, 2, 7, 8], "valueerror": 1, "recursioncontext": [1, 12], "error": [1, 2, 8], "object": [1, 2, 3, 5, 6, 7, 8], "call": [1, 2, 3, 4, 5, 6, 7, 8], "recurs": [1, 3], "no_recurs": [1, 12], "get_defaults_from_self": [1, 12], "argnam": 1, "invok": 1, "see": [1, 2, 6, 7, 8], "below": [1, 4, 8], "includ": [1, 2, 4], "latter": [1, 7], "except": [1, 2], "nor": 1, "multiply_std_dev": [1, 12], "ensembl": [1, 4, 5, 6, 8], "multipl": [1, 2, 4, 5, 6], "float": [1, 2, 3, 4, 5, 6, 7], "modifi": [1, 2, 6], "chang": [1, 8], "standard": [1, 2, 4, 5, 6, 8], "deviat": [1, 2, 4, 5, 6, 8], "factor": [1, 8], "over": [1, 2, 4, 6], "last": [1, 4, 5, 6, 8], "dimens": [1, 3, 4, 5, 6, 7, 8], "augment_ensembl": [1, 12], "pred": [1, 2], "int": [1, 2, 3, 4, 5, 6, 7, 8], "0": [1, 2, 3, 4, 5, 6, 7, 8], "rng": [1, 2, 3, 7], "augment": 1, "size": [1, 2, 4, 8], "per": 1, "variabl": 1, "extra": [1, 11], "observ": [1, 4], "multivari": 1, "normal": [1, 2, 7, 8], "same": [1, 3, 6], "within": [1, 8], "exist": [1, 3, 4, 7, 10], "time": [1, 2, 4, 6, 8], "origin": 1, "covariance_from_ensembl": [1, 12], "weight": [1, 3, 4, 5, 6], "std_dev_from_ensembl": [1, 12], "ensemble_from_covari": [1, 12], "mean": [1, 2, 3, 8], "cov": 1, "ensemble_s": [1, 4], "random_se": [1, 2, 3, 4, 6, 7, 8], "similarity_gaussian": [1, 12], "relevant_featur": 1, "true": [1, 2, 3, 4, 5, 6, 7, 8], "scale": [1, 8], "similar": [1, 4, 8], "matrix": [1, 8], "gaussian": 1, "distanc": [1, 8], "restrict": 1, "rescal": 1, "input": [1, 4, 5, 6, 8], "featur": [1, 2, 3, 4, 5, 6, 8], "anoth": [1, 3, 7], "sqrt": [1, 8], "Then": [1, 4, 8], "put": 1, "std": 1, "dev": 1, "equal": [1, 4, 5, 6, 8], "similarity_exp": [1, 12], "similarity_cosin": [1, 12], "relevant_indic": 1, "covariance_from_similar": [1, 12], "varianc": [1, 8], "vector": [1, 7, 8], "correl": [1, 4, 5, 6, 8], "joint_entropi": [1, 12], "Not": [1, 2], "regular": [1, 8], "liabl": 1, "underestim": 1, "entropi": [1, 3, 8], "mai": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11], "than": [1, 8], "thei": [1, 2, 4, 5, 6, 7, 8], "appear": [1, 2, 4, 5, 6, 7], "calcul": [1, 6, 8], "due": 1, "batch_siz": [1, 2, 6, 8], "joint_entropy_regular": [1, 12], "n_class": 1, "avoid": [1, 8], "you": [1, 2, 3, 4, 6, 8, 10], "group_siz": [1, 12], "group_edg": [1, 12], "seed_al": [1, 12], "seed": [1, 2, 3, 4, 7, 8], "as_list": [1, 12], "match": [1, 3, 8, 12], "target": [1, 3], "pool": [1, 2, 8, 10], "lambda": 1, "isint": [1, 12], "check": [1, 2], "whether": [1, 2, 3, 4, 5, 8], "cast": 1, "integ": [1, 2, 7], "_type_": [1, 2, 3], "_description_": [1, 2, 3], "dict_get": [1, 12], "d": 1, "_pop": 1, "dict_pop": [1, 12], "std_kei": [1, 12], "dictionari": [1, 2, 3], "posit": [1, 8], "g": 1, "apart": 1, "first": [1, 2, 3, 4, 5, 6, 7, 8], "one": [1, 2, 3, 4, 6, 7, 8], "should": [1, 2, 4, 5, 6, 8], "iter": [1, 2, 3, 6, 7], "process": [1, 8], "replac": 1, "more": [1, 8], "remov": [1, 2, 7, 8], "update_copi": [1, 12], "d1": 1, "d2": 1, "any_get": [1, 12], "element": 1, "f6b1c433450cb749f45844dd60ab3b27": 1, "any_pop": [1, 12], "alia": [1, 12], "alias": 1, "multisearch": [1, 12], "queri": 1, "one_to_on": 1, "indic": [1, 2, 3, 7, 8], "search": [1, 2, 10], "axi": [1, 2, 4, 6], "further": 1, "ax": [1, 2, 3, 4, 5, 6], "correspond": [1, 4, 5, 6, 7, 8], "term": [1, 7], "depend": [1, 4, 6, 11], "arrai": [1, 2, 3, 7, 8], "valid": [1, 2], "exactli": [1, 3], "onc": [1, 2, 6], "2d": 1, "2nd": 1, "length": [1, 2, 6, 8], "pair": [1, 2, 6], "form": [1, 4], "query_index": 1, "array_index": 1, "ufunc": [1, 12], "f": [1, 3], "shift_se": [1, 12], "shift": [1, 2, 7], "rang": [1, 7, 12], "start": [1, 2, 4, 5, 6, 8], "stop": [1, 2], "step": [1, 8], "list": [1, 2, 3, 4], "consist": [1, 8], "start_i": 1, "stop_i": 1, "togeth": [1, 8], "divid": [1, 2, 8], "up": 1, "chunk": [1, 12], "plu": [1, 4, 8], "seq": 1, "frac_enum": [1, 12], "start_zero": 1, "much": [1, 2, 4, 5, 6, 8], "like": [1, 2, 3, 6, 8], "enumer": 1, "yield": [1, 5, 6, 7], "order": [1, 2, 6], "where": [1, 2, 4, 5, 6, 8], "fraction": [1, 2, 8], "through": [1, 6, 7], "sequenc": [1, 3], "end": [1, 2, 3, 7, 10], "short": 1, "otherwis": [1, 3, 4, 6], "add_slic": [1, 12], "slice": [1, 7], "repres": 1, "whole": [1, 2, 8], "window": 1, "minu": 1, "bit": 1, "index": [1, 3, 6, 8, 10], "flatten": [1, 12], "dim": 1, "diagon": [1, 8, 12], "degre": 1, "concaten": [1, 12], "seri": 1, "support": [1, 4], "datatyp": 1, "along": [1, 2, 5, 6], "join": [1, 12], "make_d": 1, "numpi": [1, 3, 7, 8], "torch": [1, 3, 6, 11], "is_iter": [1, 12], "as_numpi": [1, 12], "is_on": [1, 12], "zip_dict": [1, 12], "dict": [1, 2], "behavior": 1, "zip": 1, "axes_except": [1, 12], "non_ax": 1, "sum_except": [1, 12], "no_default": [1, 12], "selfdict": [1, 12], "refer": [1, 7], "attr": 1, "vice": 1, "versa": 1, "similarli": [1, 3], "pop": [1, 12], "k": [1, 8], "v": 1, "keyerror": 1, "clear": [1, 12], "item": [1, 12], "copi": [1, 8, 12], "shallow": 1, "fromkei": [1, 12], "creat": [1, 3], "set": [1, 2, 4, 5, 6, 8], "els": [1, 3], "provid": [1, 4, 6, 7, 8], "view": 1, "popitem": [1, 12], "lifo": 1, "out": [1, 8], "empti": 1, "setdefault": [1, 12], "insert": 1, "updat": [1, 12], "present": [1, 3], "ha": [1, 2, 6, 8], "lack": 1, "either": [1, 2, 4, 5, 6, 8], "cacheddict": [1, 12], "init_kei": 1, "dot_last": [1, 12], "interv": 2, "confidence_level": 2, "standard_error": 2, "len_x": 2, "_supportsarrai": [2, 3, 4, 5, 6], "dtype": [2, 3, 4, 5, 6, 7], "_nestedsequ": [2, 3, 4, 5, 6], "bool": [2, 3, 4, 5, 6, 7], "complex": [2, 3, 4, 5, 6], "str": [2, 3, 4, 5, 6], "byte": [2, 3, 4, 5, 6], "option": [2, 3, 4, 6, 8, 11], "arraylik": [2, 6, 8], "make": [2, 4, 5, 6, 8, 10], "class": [2, 3, 5, 6, 7, 8, 10, 12], "float64": 2, "err": 2, "file_path": 2, "plot_arg": 2, "pickl": [2, 4, 5, 6], "x_val": 2, "y_val": 2, "point": [2, 8, 10], "filepath": 2, "path": [2, 4, 5, 6], "static": [2, 3, 4, 5, 6], "file": [2, 3], "locat": 2, "filenam": 2, "sever": [2, 4], "wildcard": 2, "folder": 2, "longest": 2, "_summary_": 2, "notimplementederror": [2, 8], "averag": 2, "average_ov": 2, "top": [2, 8], "a0": 2, "a1": 2, "test": [2, 6, 8], "get_err": 2, "show_error": 2, "show": 2, "show_diagon": 2, "block": 2, "xy": [2, 7], "xlabel": 2, "compound": 2, "ylabel": 2, "show_err": 2, "95": 2, "grid": 2, "tick": 2, "tight_layout": 2, "dpi": 2, "800": 2, "figsiz": 2, "5": [2, 8], "fontsiz": 2, "12": 2, "xlim": 2, "ylim": 2, "xmin": 2, "xmax": 2, "ymin": 2, "ymax": 2, "titl": 2, "legend": 2, "matplotlib": 2, "draw": [2, 8], "after": [2, 3, 4, 8], "fact": [2, 3, 4], "band": 2, "when": [2, 4, 6, 8], "avail": [2, 4, 6, 8], "The": [2, 3, 4, 5, 6, 7, 8, 10], "threshold": [2, 7], "dash": 2, "grai": 2, "figur": 2, "unit": 2, "font": 2, "subset": [2, 8], "set_xlim": 2, "altern": [2, 4, 8], "pyplot": 2, "displai": 2, "build": [2, 4], "sanit": 2, "abov": [2, 3, 6, 7, 8, 11], "synonym": 2, "addit": [2, 3, 4, 5, 6], "keyword": [2, 3], "note": [2, 7, 8], "about": [2, 8], "want": [2, 6], "purpos": [2, 3, 8], "uniqu": 2, "singl": [2, 3, 7, 8], "inf": [2, 6, 7, 8], "differ": [2, 4, 6, 7, 10], "interpret": [2, 7, 8], "perhap": [2, 7], "properti": [2, 3, 4, 5, 6, 7], "pointer": [2, 7], "accordingli": [2, 7], "hide": [2, 7], "hidden": [2, 7], "still": [2, 3, 7], "store": [2, 3, 4, 7, 8], "futur": [2, 7], "current": [2, 4, 6, 7], "runs_dir": 2, "overwrite_old_run": 2, "n_initi": 2, "20": [2, 3, 8], "num_sampl": [2, 8], "selector": [2, 4, 8, 10], "selector_arg": 2, "fit_arg": 2, "n_run": 2, "10": [2, 8], "save_id": 2, "split_se": 2, "421": 2, "test_siz": 2, "timestamp": [2, 3, 8], "stop_sampl": 2, "stop_rms": 2, "stop_frac": 2, "peek_scor": 2, "test_samples_x": 2, "test_samples_i": 2, "directori": 2, "run": [2, 4, 10], "result": [2, 4, 8], "train": [2, 4, 5, 6, 8], "separ": [2, 4, 5, 6, 8], "subdirectori": 2, "randomli": [2, 4, 5, 6], "string": [2, 3, 7, 8], "random": [2, 3, 4, 7, 8], "expect": 2, "ei": 2, "greedi": [2, 8], "instanc": [2, 3, 6, 8], "constructor": [2, 3, 4, 8], "alreadi": [2, 3, 6, 8], "automat": [2, 4, 6], "labelled_sampl": [2, 8], "framework": [2, 8, 10], "specif": [2, 3], "pytorch": [2, 3, 4, 10], "etc": 2, "overal": 2, "do": [2, 4, 5], "shuffl": [2, 3, 7], "experi": [2, 4, 10], "been": [2, 4, 5, 6, 8], "reach": 2, "move": 2, "round": 2, "suggest": 2, "someth": 2, "85": 2, "nois": 2, "kl": 2, "diverg": 2, "ground": 2, "truth": 2, "probabl": [2, 8], "mass": 2, "tell": 2, "gain": 2, "lower": 2, "penal": 2, "poorli": 2, "calibr": 2, "could": 2, "discrimin": 2, "between": [2, 4, 5, 6, 8], "certain": 2, "uncertain": 2, "respect": 2, "max_precis": 2, "simpl": [2, 8], "binari": 2, "lowest": 2, "To": [2, 4], "converg": 2, "local": 2, "minimum": 2, "adjac": 2, "befor": [2, 4, 5, 6, 8], "mode": 2, "max": 2, "max_iter": 2, "50": 2, "scalar": 2, "min": 2, "optim": [2, 8], "previous": [2, 8], "explor": 2, "side": 2, "begin": 2, "half": 2, "low": [2, 7, 8], "twice": 2, "high": [2, 7], "somewher": 2, "middl": 2, "val": 2, "sub": [3, 8], "interfac": [3, 4, 8], "readabl": 3, "occur": [3, 6], "built": [3, 4], "teachabl": 3, "seedsequ": 3, "bitgener": 3, "convert_sequ": 3, "mutabl": 3, "anyth": [3, 7], "implement": [3, 4, 5, 6, 7, 8, 10], "tensor": [3, 6], "panda": 3, "datafram": 3, "evalu": 3, "wrap": [3, 4, 5, 6, 7], "expos": 3, "ident": 3, "algorithm": [3, 8], "o": 3, "mutablesequ": 3, "concret": 3, "suitabl": 3, "ad": 3, "goe": 3, "isn": 3, "until": 3, "state": [3, 6], "len": [3, 4, 5, 6], "old_shap": 3, "old_bdim": 3, "new_shap": 3, "contain": [3, 4, 5, 6, 7, 10], "For": [3, 4, 5, 6, 8], "constitu": 3, "wherea": 3, "right": 3, "sinc": [3, 8], "row": [3, 4, 5, 6], "packag": [3, 11, 12], "getter": 3, "some": [3, 4, 8, 10], "common": 3, "kera": [3, 4, 10], "graphconvmodel": 3, "convmolfeatur": 3, "abbrevi": 3, "convmol": 3, "here": [3, 8], "gcnmodel": 3, "molgraphconvfeatur": 3, "molgraph": 3, "csv": 3, "column": [3, 8], "classnam": 3, "These": [3, 8], "df": 3, "convert": 3, "multi": 3, "By": [3, 8], "extract": [3, 4, 8], "becom": 3, "exampl": [3, 4, 8], "taken": [3, 8], "modul": [4, 8, 10, 12], "variou": [4, 8, 10], "ml": 4, "document": [4, 8], "explain": [4, 7], "share": 4, "univers": 4, "easi": [4, 10], "solut": 4, "your": [4, 8, 10], "regress": [4, 5], "wrapped_model": 4, "dropout": [4, 5, 6], "tool": [4, 10], "produc": [4, 8], "embed": [4, 6, 8, 10], "laplac": [4, 6], "approxim": [4, 6], "problem": [4, 8], "domain": 4, "try": [4, 8], "howev": [4, 8], "hint": 4, "mc": [4, 5, 6], "extens": 4, "good": [4, 8], "place": 4, "lightgbmregressor": 4, "catboostregressor": 4, "scikit": 4, "linear": [4, 6], "ridg": 4, "conveni": 4, "bayesianridgeregressor": 4, "gaussianprocessregressor": 4, "randomforestregressor": 4, "extratreesregressor": 4, "gradientboostingregressor": 4, "reiniti": [4, 5, 6], "init_se": [4, 5, 6], "40": 4, "instead": [4, 5, 6], "those": [4, 8], "increment": 4, "init_seed_incr": 4, "estim": 4, "accompani": [4, 5, 6], "previou": [4, 5, 6], "compon": [4, 5, 6], "beyond": [4, 5, 6], "infer": [4, 5, 6], "drop": [4, 5, 6], "decor": [4, 5, 6, 12], "commonli": [4, 5, 6], "sample_input": [4, 5, 6], "re": [4, 5, 6], "everi": [4, 5, 6], "overload": [4, 5, 6], "non": [4, 5, 6], "picklabl": [4, 5, 6], "ineffici": [4, 5, 6], "compat": [4, 5, 6], "particular": [4, 5, 6], "work": [4, 5, 6, 8], "hasn": [4, 5, 6], "instanti": 4, "special": 4, "prescrib": 4, "destin": 4, "carri": 4, "deepchemregressor": 4, "return_std_dev": [4, 5, 6, 8], "defin": 4, "hierarchi": 4, "epistem": [4, 5, 6, 10], "memori": [4, 5, 6, 8], "bug": [4, 5, 6], "often": [4, 5, 6, 8], "becaus": [4, 5, 6, 8], "larg": [4, 5, 6, 8], "matric": [4, 5, 6], "involv": [4, 5, 6], "earlier": [4, 6, 7], "guarante": [4, 6], "multipli": [4, 6, 8], "use_covariance_for_ensembl": [4, 6], "inherit": 4, "wish": 4, "free": 4, "larger": [4, 5, 6, 8], "format": [5, 10], "kerasregressor": 5, "mcdropoutregressor": [5, 6], "get_weight": 5, "set_weight": 5, "initial_weight": 5, "accord": [5, 6], "save_initial_weight": 5, "fix_dropout": [5, 6], "retool": [5, 6], "helper": [5, 6], "dropout_cal": 5, "noise_dim": 5, "hold": 5, "humble_batchnorm_cal": 5, "get_mod_lay": 5, "mod": 5, "subobject": 5, "skip": [5, 6], "frozenset": [5, 6], "only_lay": 5, "travers": [5, 6], "collect": [5, 6], "encount": 5, "modify_dropout": 5, "obj": 5, "properli": 5, "lastlayerpytorchlinear": 6, "lastlayerlinearizableregressor": 6, "predict_with_embed": 6, "forward": 6, "output": [6, 8], "penultim": 6, "known": 6, "yet": [6, 8], "last_layer_embed": 6, "activ": [6, 8, 10], "bia": 6, "set_last_lay": 6, "last_layer_nam": 6, "hook": 6, "named_modul": 6, "find_last_lay": 6, "nn": 6, "might": 6, "torchvis": 6, "classif": 6, "besid": 6, "squeezenet": 6, "wast": 6, "covariance_linear": 6, "block_siz": 6, "1000": 6, "embedding_method": 6, "find_method": 6, "input_embed": 6, "method_nam": 6, "_embed": 6, "emb": 6, "last_layer_emb": 6, "embed_last_lay": 6, "predict_linear": 6, "defaultlightningmodul": [], "loss": [], "mse_loss": [], "adam": [], "opt_arg": [], "lightningmodul": [], "whatev": [], "decid": [], "possibl": 8, "configure_optim": [], "what": [8, 10], "rate": [], "schedul": [], "But": [], "gan": [], "6": [], "two": [8, 10], "second": 8, "lr": [], "lr_scheduler_config": [], "lr_schedul": [], "describ": 8, "frequenc": [], "associ": [], "configur": [], "shown": [], "requir": [], "epoch": 6, "monitor": [], "reducelronplateau": [], "val_loss": [], "thu": 6, "warn": [], "strict": [], "learningratemonitor": [], "callback": [], "progress": [], "custom": [], "log": [], "condit": [], "made": 8, "simpli": [], "metric_to_track": [], "metric_v": [], "sequenti": [], "There": 8, "former": [], "oper": 8, "mention": [], "optimizer_on": [], "sgd": [], "01": [], "optimizer_two": [], "cycl": [], "continu": [], "being": 8, "1e": 8, "gen_opt": [], "model_gen": [], "dis_opt": [], "model_di": [], "02": [], "dis_sch": [], "cosineann": [], "t_max": [], "own": 8, "gen_sch": [], "exponentiallr": [], "99": [], "procedur": [], "wasserstein": [], "http": [7, 8], "arxiv": 8, "org": [7, 8], "ab": 8, "1704": [], "00028": [], "n_critic": [], "thing": [6, 8], "know": 8, "backward": [], "16": [], "handl": 8, "training_step": [], "optimizer_idx": [], "lbfg": [], "closur": [], "control": [], "optimizer_step": [], "train_batch": [], "batch_idx": [], "bar": [], "logger": [], "dataload": [], "paramref": [], "pytorch_lightn": [], "core": [], "truncated_bptt_step": [], "gpu": [], "tpu": [], "ipu": [], "deepspe": [], "fancier": [], "z": [], "encod": [], "decod": [], "add": [], "truncat": [], "back": [], "propag": [], "backprop": [], "lstm": [], "smooth": 8, "accumulate_grad_batch": [], "intern": [], "validation_step": [], "val_batch": [], "interest": [], "accuraci": [], "pseudocod": [], "val_out": [], "val_data": [], "validation_epoch_end": [], "dataloader_idx": [], "validation_step_end": [], "imag": [], "text": [], "sample_img": [], "make_grid": [], "add_imag": [], "example_imag": [], "acc": [], "labels_hat": [], "argmax": [], "val_acc": [], "sum": [], "log_dict": [], "recommend": [], "quickli": 8, "switch": [], "eval": [], "disabl": [], "At": [], "enabl": [], "checkpoint_hyper_params_kei": [], "hyper_paramet": [], "checkpoint_hyper_params_nam": [], "hparams_nam": [], "checkpoint_hyper_params_typ": [], "hparams_typ": [], "t_destin": [], "add_modul": [], "child": [], "access": [], "attribut": [], "all_gath": [], "sync_grad": [], "user": 10, "acceler": [], "agnost": [], "gather": [], "possibli": [], "nest": [], "thereof": [], "world": [], "flag": [], "synchron": [], "world_siz": [], "wa": 8, "callabl": [], "children": [], "init": [], "doc": [7, 8], "no_grad": [], "init_weight": 6, "m": 8, "print": [], "fill_": [], "net": [], "in_featur": [], "out_featur": [], "requires_grad": [], "automatic_optim": [], "respons": [], "zero_grad": [], "steppabl": [], "perform": [8, 10], "accumul": [], "manual": [], "bfloat16": [], "buffer": [], "direct": [], "member": [], "xdoctest": [], "undefin": [], "var": [], "buf": [], "20l": [], "1l": [], "5l": [], "immedi": 10, "clip_gradi": [], "gradient_clip_v": [], "gradient_clip_algorithm": [], "clip": [], "consid": 8, "configure_gradient_clip": [], "opt": [], "norm": [], "configure_callback": [], "attach": [], "merg": [], "trainer": 6, "prioriti": [], "sure": 8, "modelcheckpoint": [], "early_stop": [], "earlystop": [], "checkpoint": [], "logic": [], "configure_sharded_model": [], "awar": [], "context": [], "shard": [], "plugin": [], "instantli": [], "extrem": [], "stage": [], "idempot": [], "cpu": [], "cuda": [], "devic": [], "construct": [], "live": [], "while": [], "current_epoch": [], "doubl": [], "dump_patch": [], "effect": 8, "detail": 8, "affect": [], "batchnorm": [], "equival": [], "grad": [], "comparison": 8, "mechan": [], "confus": [], "example_input_arrai": [], "consum": [], "extra_repr": [], "represent": [], "line": [], "fabric": [], "freez": [], "param": [], "mylightningmodul": [], "classmethod": [], "from_compil": [], "_dynamo": [], "optimizedmodul": [], "pl": [], "compil": [], "behav": [], "isinst": [], "obtain": [], "get_buff": [], "throw": [], "docstr": [], "get_submodul": [], "explan": 8, "correctli": [], "fulli": [], "qualifi": [], "referenc": [], "attributeerror": [], "invalid": [], "resolv": [], "get_extra_st": [], "state_dict": [], "set_extra_st": [], "pickleabl": [], "serial": [], "break": [], "get_paramet": [], "let": [], "sai": [], "net_b": [], "net_c": [], "conv": [], "conv2d": [], "33": [], "kernel_s": [], "stride": [], "100": [], "200": [], "diagram": [], "itself": 6, "runtim": [], "bound": [], "against": [], "achiev": [], "transit": [], "alwai": [], "global_rank": [], "across": [], "node": [], "global_step": [], "total": 8, "seen": [], "properi": [], "hparam": [], "attributedict": [], "mutablemap": [], "hyperparamet": 8, "save_hyperparamet": [], "frozen": [], "hparams_initi": [], "read": [], "immut": [], "load_from_checkpoint": [], "checkpoint_path": [], "io": [], "map_loc": [], "hparams_fil": [], "primari": [], "__init__": 8, "under": [], "url": [], "now": [], "map": [], "setup": [], "yaml": [], "hierarch": [], "structur": [], "drop_prob": [], "32": [], "won": [], "namespac": [], "refactor": [], "strictli": [], "ckpt": [], "num_lay": [], "128": [], "pretrained_ckpt_path": [], "new_path": [], "pretrained_model": [], "y_hat": [], "load_state_dict": [], "descend": [], "persist": [], "missing_kei": [], "miss": [], "unexpected_kei": [], "unexpect": [], "namedtupl": [], "field": [], "regist": [], "runtimeerror": [], "local_rank": [], "prog_bar": [], "on_step": [], "on_epoch": [], "reduce_fx": [], "enable_graph": [], "sync_dist": [], "sync_dist_group": [], "add_dataloader_idx": [], "metric_attribut": [], "rank_zero_onli": [], "train_loss": [], "reduct": [], "auto": 8, "detach": [], "graph": [], "care": [], "signific": [], "commun": [], "overhead": [], "ddp": [], "sync": [], "mix": [], "explicitli": [], "restor": [], "torchmetr": [], "rank": 8, "prevent": 8, "deadlock": [], "metric_n": [], "metriccollect": [], "test_step": [], "log_grad_norm": [], "grad_norm_dict": [], "lr_scheduler_step": [], "_lrschedul": [], "adjust": [], "lrschedul": [], "ones": 8, "were": [], "manual_backward": [], "proper": [], "network": [], "duplic": [], "l": 10, "idx": [], "named_buff": [], "prefix": [], "prepend": [], "running_var": [], "named_children": [], "conv4": [], "conv5": [], "memo": [], "remove_dupl": [], "named_paramet": [], "on_after_backward": [], "nativ": [], "amp": [], "unscal": [], "on_before_optimizer_step": [], "on_after_batch_transf": [], "alter": [], "transfer": [], "execut": [], "parallel": [], "come": 8, "belong": [], "gpu_transform": [], "misconfigurationexcept": [], "dp": [], "on_before_batch_transf": [], "transfer_batch_to_devic": [], "on_before_backward": [], "inspect": [], "tensorboard": [], "25": [], "tf": [], "huge": [], "add_histogram": [], "tag": [], "on_before_zero_grad": [], "loop": [], "zero": [], "on_fit_end": [], "veri": 8, "on_fit_start": [], "on_gpu": [], "around": 8, "on_load_checkpoint": [], "on_save_checkpoint": [], "chanc": [], "something_cool_i_want_to_sav": [], "global": [], "regard": [], "on_predict_batch_end": [], "predict_step_end": [], "on_predict_batch_start": [], "happen": [], "on_predict_end": [], "on_predict_epoch_end": [], "on_predict_epoch_start": [], "on_predict_model_ev": [], "on_predict_start": [], "full": 8, "dump": [], "my_cool_pickable_object": [], "aspect": [], "on_test_batch_end": [], "test_step_end": [], "on_test_batch_start": [], "on_test_end": [], "on_test_epoch_end": [], "on_test_epoch_start": [], "on_test_model_ev": [], "on_test_model_train": [], "on_test_start": [], "on_train_batch_end": [], "training_step_end": [], "on_train_batch_start": [], "rest": [], "on_train_end": [], "close": [], "on_train_epoch_end": [], "training_epoch_end": [], "OR": [], "cach": [], "on_train_epoch_start": [], "on_train_start": [], "saniti": [], "on_validation_batch_end": [], "on_validation_batch_start": [], "on_validation_end": [], "on_validation_epoch_end": [], "on_validation_epoch_start": [], "on_validation_model_ev": [], "on_validation_model_train": [], "on_validation_start": [], "lightningoptim": [], "optimizer_closur": [], "on_tpu": [], "using_lbfg": [], "phase": [], "benefit": [], "advanc": 7, "warm": [], "500": [], "lr_scale": [], "pg": [], "param_group": [], "learning_r": [], "optimizer_zero_grad": [], "set_to_non": [], "use_pl_optim": [], "_fabricoptim": [], "profil": [], "predict_dataload": [], "download": [], "prepar": [], "prepare_data": [], "correct": [], "sampler": [], "arbitrari": [], "hardwar": [], "yourself": [], "predict_step": [], "oom": [], "basepredictionwrit": [], "write": 8, "disk": [], "databas": [], "spawn": [], "ddp_spawn": [], "8": [], "mymodel": [], "dm": [], "corrupt": [], "safe": [], "NOT": [], "download_data": [], "token": [], "bad": [], "data_split": [], "some_st": [], "some_other_st": [], "environ": [], "prepare_data_per_nod": [], "litdatamodul": [], "lightningdatamodul": [], "super": [], "great": [], "system": [], "request": 7, "initialize_distribut": [], "train_dataload": [], "val_dataload": [], "test_dataload": [], "register_backward_hook": [], "removablehandl": [], "deprec": [], "favor": 6, "register_full_backward_hook": [], "register_buff": [], "running_mean": [], "part": [], "alongsid": [], "ignor": [], "num_featur": [], "register_forward_hook": [], "inplac": [], "register_forward_pre_hook": [], "pre": [], "grad_input": [], "grad_output": [], "subsequ": [], "entri": 8, "technic": [], "reason": [], "receiv": 6, "caller": [], "register_load_state_dict_post_hook": [], "post": [], "incompatible_kei": [], "modif": [], "thrown": [], "clearn": [], "register_modul": [], "register_paramet": [], "requires_grad_": [], "autograd": [], "record": [], "help": 10, "finetun": [], "individu": 8, "frame": [], "omegaconf": [], "send": [], "mixin": [], "import": 8, "hyperparametersmixin": [], "manuallyargsmodel": [], "arg1": [], "arg2": [], "arg3": [], "assign": [], "abc": [], "14": [], "automaticargsmodel": [], "singleargmodel": [], "p1": [], "p2": [], "p3": [], "dynam": [], "litmodel": [], "l1": [], "load_data": [], "28": [], "num_class": [], "share_memori": [], "share_memory_": [], "keep_var": [], "releas": [], "pleas": [], "design": [8, 10], "ordereddict": [], "compos": [], "tbptt_split_batch": [], "split_siz": [], "backpropag": [], "root": [], "level": [], "time_dim": [], "batch_split": [], "split_x": [], "elif": [], "teardown": [], "pattern": [], "necessari": 8, "totensor": [], "mnist": [], "loader": [], "loader_a": [], "loader_b": [], "loader_n": [], "test_epoch_end": [], "test_out": [], "test_batch": [], "test_data": [], "didn": [], "all_test_pr": [], "test_step_output": [], "some_result": [], "calc_all_result": [], "outer": 6, "inner": 6, "final_valu": [], "dataloader_output": [], "test_step_out": [], "final_metr": [], "dataloader_id": [], "test_acc": [], "test_loss": [], "softmax": [], "nce": [], "later": [], "code": [], "sub_batch": [], "split_batches_for_dp": [], "step_output": [], "num_gpu": [], "big": 8, "output_result": [], "all_test_step_out": [], "nce_loss": [], "guid": [], "to_empti": [], "storag": [], "desir": [], "to_onnx": [], "input_sampl": [], "onnx": [], "trace": 8, "Will": 8, "export": [], "to_torchscript": [], "script": [], "example_input": [], "scriptmodul": [], "torchscript": [], "jit": [], "instal": 10, "latest": [], "simplemodel": [], "64": [], "relu": [], "pt": [], "isfil": [], "model_trac": [], "randn": [], "regardless": [], "to_uncompil": [], "toggle_optim": [], "dangl": [], "untoggle_optim": [], "param_requires_grad_st": [], "reset": [], "toggl": [], "section": [], "reload": [], "reload_dataloaders_every_n_epoch": [], "cifar": [], "mnist_load": [], "cifar_load": [], "batch_mnist": [], "batch_cifar": [], "train_out": [], "train_data": [], "n_batch": [], "tbptt_step": [], "n_optim": [], "squeez": [], "overridden": [], "training_step_output": [], "portion": [], "insid": [], "denomin": [], "gpu_0_pr": [], "gpu_1_pr": [], "gpu_n_pr": [], "box": [], "custombatch": [], "move_data_to_devic": [], "apply_to_collect": [], "dst_type": [], "unfreez": [], "untoggl": [], "val_step_output": [], "dataloader_output_result": [], "dataloader_out": [], "dataloader_i_output": [], "xpu": [], "get_dataload": [], "collate_fn": [], "lightningtrain": 6, "traininglimit": 6, "min_sampl": 6, "10000": [], "min_epoch": 6, "max_sampl": 6, "max_epoch": 6, "determinist": 8, "val_load": [], "init_bia": 6, "pytorchregressor": 6, "linearizablelaplaceregressor": 6, "get_lightning_train": 6, "rerturn": 6, "convert_dtyp": 6, "covariance_laplac": 6, "fit_laplac": 6, "lamb": 6, "get_training_limit": 6, "naiv": 6, "fanci": 6, "sample_limit": 6, "batch_limit": 6, "epoch_limit": 6, "though": 6, "encapsul": 6, "stdlimit": 6, "as_tensor": 6, "dropout_forward": 6, "include_nam": 6, "depth": 6, "tree": 6, "themselv": 6, "cap_to_s": 7, "upon": 7, "__getitem__": 7, "__len__": 7, "uniformli": 7, "exclus": 7, "upper": 7, "remain": 7, "recogn": 7, "stabl": 7, "html": 7, "var_shap": 7, "repeat": 7, "typeerror": 7, "verbos": [7, 8], "introduct": 8, "unlabel": 8, "suffici": 8, "addition": 8, "auxiliari": 8, "chosen": 8, "selecion": 8, "deep_model": 8, "unlabeled_pool": 8, "aim": 8, "highest": 8, "scorer": 8, "thompsonselector": 8, "baselin": 8, "soon": 8, "x_kei": 8, "prior": 8, "prior_scal": 8, "return_indic": 8, "regressionmodel": 8, "propos": 8, "style": 8, "address": 8, "serv": 8, "via": 8, "whichev": 8, "de": 8, "emphas": 8, "coveni": 8, "introduc": 8, "quantil": 8, "power": 8, "constant": 8, "prefilt": 8, "incom": 8, "maxim": [8, 10], "therefor": 8, "constraint": 8, "000": 8, "cheaper": 8, "practic": 8, "narrow": 8, "down": 8, "risk": 8, "divers": 8, "too": 8, "fixed_sampl": 8, "fixed_prior": 8, "tail_cal": 8, "omit": 8, "isnin": 8, "definit": 8, "explicit": 8, "dictdatabas": 8, "haven": 8, "ve": 8, "sent": 8, "off": 8, "laboratori": 8, "pipelin": 8, "redund": 8, "newli": 8, "normalize_epsilon": 8, "001": 8, "05": 8, "similarity_scal": 8, "fast_opt": 8, "n_round": 8, "uncertaintyselector": 8, "joint": 8, "coviar": 8, "long": 8, "particularli": 8, "dimension": 8, "even": 8, "rel": 8, "small": 8, "numer": 8, "instabl": 8, "co": 8, "invers": 8, "squar": 8, "retriev": 8, "modulo": 8, "seek": 8, "laplaceapproxregressor": 8, "embedding_length": 8, "\u00b2": 8, "\u03b5": 8, "mean_squar": 8, "relat": 8, "measur": [8, 10], "synthet": 8, "decai": 8, "exponenti": 8, "life": 8, "proport": 8, "tune": 8, "pairwis": 8, "smaller": 8, "applic": 8, "c_ij": 8, "p_i": 8, "p_j": 8, "c": 8, "_ij": 8, "gamma": 8, "oversampl": 8, "bait": 8, "2106": 8, "09675": 8, "_": 8, "fisher": 8, "mutual": 8, "unknown": 8, "labelelled_sampl": 8, "unpack": 8, "linearizableregressor": 8, "enough": 8, "greedili": 8, "empir": 8, "timestamp_kei": 8, "ctive": 10, "earn": 10, "xploratio": 10, "librari": 10, "popular": 10, "lightgbm": 10, "catboost": 10, "plug": 10, "lab": 10, "handi": 10, "instruct": 10, "main": 10, "submodul": [10, 12], "page": 10, "pip": 11, "ed": 11, "notat": 11, "command": 11, "tensorflow": 11, "subpackag": 12, "content": 12, "stat": 12, "util": 12}, "objects": {"": [[1, 0, 0, "-", "alien"], [9, 0, 0, "-", "docs"]], "alien": [[2, 0, 0, "-", "benchmarks"], [1, 0, 0, "-", "classes"], [3, 0, 0, "module-0", "data"], [1, 0, 0, "-", "decorators"], [4, 0, 0, "-", "models"], [7, 0, 0, "-", "sample_generation"], [8, 0, 0, "-", "selection"], [1, 0, 0, "-", "stats"], [1, 0, 0, "-", "utils"]], "alien.benchmarks": [[2, 0, 0, "-", "metrics"], [2, 0, 0, "-", "oracle"], [2, 0, 0, "-", "retrospective"], [2, 0, 0, "-", "uncertainty_metrics"]], "alien.benchmarks.metrics": [[2, 1, 1, "", "RMSE"], [2, 1, 1, "", "Scatter"], [2, 1, 1, "", "Score"], [2, 1, 1, "", "TopScore"], [2, 4, 1, "", "conf_int"], [2, 4, 1, "", "plot_scores"], [2, 4, 1, "", "sem"]], "alien.benchmarks.metrics.RMSE": [[2, 2, 1, "", "append"], [2, 2, 1, "", "average_runs"], [2, 2, 1, "", "compute"], [2, 3, 1, "", "default_filename"], [2, 2, 1, "", "from_folder"], [2, 2, 1, "", "load"], [2, 2, 1, "", "load_many"], [2, 2, 1, "", "save"]], "alien.benchmarks.metrics.Scatter": [[2, 2, 1, "", "RMSE"], [2, 2, 1, "", "compute"], [2, 2, 1, "", "load"], [2, 2, 1, "", "plot"], [2, 2, 1, "", "save"]], "alien.benchmarks.metrics.Score": [[2, 2, 1, "", "append"], [2, 2, 1, "", "average_runs"], [2, 3, 1, "", "default_filename"], [2, 2, 1, "", "load"], [2, 2, 1, "", "load_many"], [2, 2, 1, "", "save"]], "alien.benchmarks.metrics.TopScore": [[2, 2, 1, "", "append"], [2, 2, 1, "", "average_runs"], [2, 2, 1, "", "compute"], [2, 3, 1, "", "default_filename"], [2, 2, 1, "", "load"], [2, 2, 1, "", "load_many"], [2, 2, 1, "", "save"]], "alien.benchmarks.oracle": [[2, 1, 1, "", "Oracle"], [2, 1, 1, "", "SetOracle"]], "alien.benchmarks.oracle.Oracle": [[2, 2, 1, "", "get_label"], [2, 2, 1, "", "get_labels"]], "alien.benchmarks.oracle.SetOracle": [[2, 2, 1, "", "generate_sample"], [2, 2, 1, "", "generate_samples"], [2, 2, 1, "", "get_label"], [2, 2, 1, "", "get_labels"], [2, 5, 1, "", "labels"], [2, 2, 1, "", "remove_data_indices"], [2, 2, 1, "", "remove_sample"], [2, 2, 1, "", "remove_samples"], [2, 2, 1, "", "reshuffle"]], "alien.benchmarks.retrospective": [[2, 4, 1, "", "run_experiments"]], "alien.benchmarks.uncertainty_metrics": [[2, 4, 1, "", "KL_divergence"], [2, 4, 1, "", "best_multiple"], [2, 4, 1, "", "binary_optimize"], [2, 4, 1, "", "plot_errors"], [2, 4, 1, "", "search_lower"], [2, 4, 1, "", "search_upper"]], "alien.classes": [[1, 4, 1, "", "abstract_group"], [1, 4, 1, "", "final"], [1, 4, 1, "", "init_subclass"], [1, 4, 1, "", "override"], [1, 4, 1, "", "parent_locals"]], "alien.data": [[3, 0, 0, "-", "dataset"], [3, 0, 0, "-", "deepchem"]], "alien.data.dataset": [[3, 1, 1, "", "ArrayDataset"], [3, 1, 1, "", "Dataset"], [3, 1, 1, "", "DictDataset"], [3, 1, 1, "", "NumpyDataset"], [3, 1, 1, "", "ShuffledDataset"], [3, 1, 1, "", "TeachableDataset"], [3, 1, 1, "", "TeachableWrapperDataset"], [3, 1, 1, "", "TorchDataset"], [3, 1, 1, "", "TupleDataset"], [3, 4, 1, "", "compute_bdim"]], "alien.data.dataset.ArrayDataset": [[3, 5, 1, "", "X"], [3, 2, 1, "", "append"], [3, 5, 1, "", "batch_shape"], [3, 2, 1, "", "check_Xy"], [3, 2, 1, "", "extend"], [3, 5, 1, "", "feature_shape"], [3, 2, 1, "", "find"], [3, 2, 1, "", "from_data"], [3, 2, 1, "", "from_deepchem"], [3, 2, 1, "", "get_shuffle"], [3, 5, 1, "", "ndim"], [3, 2, 1, "", "reshape"], [3, 2, 1, "", "reshape_batch"], [3, 2, 1, "", "reshape_features"], [3, 5, 1, "", "shape"], [3, 5, 1, "", "y"]], "alien.data.dataset.Dataset": [[3, 5, 1, "", "X"], [3, 5, 1, "", "batch_shape"], [3, 2, 1, "", "check_Xy"], [3, 5, 1, "", "feature_shape"], [3, 2, 1, "", "find"], [3, 2, 1, "", "from_data"], [3, 5, 1, "", "ndim"], [3, 2, 1, "", "reshape"], [3, 5, 1, "", "shape"], [3, 5, 1, "", "y"]], "alien.data.dataset.DictDataset": [[3, 5, 1, "", "X"], [3, 2, 1, "", "append"], [3, 5, 1, "", "batch_shape"], [3, 2, 1, "", "check_Xy"], [3, 2, 1, "", "extend"], [3, 5, 1, "", "feature_shape"], [3, 2, 1, "", "find"], [3, 2, 1, "", "from_data"], [3, 2, 1, "", "from_deepchem"], [3, 2, 1, "", "get_shuffle"], [3, 5, 1, "", "ndim"], [3, 2, 1, "", "reshape"], [3, 2, 1, "", "reshape_batch"], [3, 2, 1, "", "reshape_features"], [3, 5, 1, "", "shape"], [3, 5, 1, "", "y"]], "alien.data.dataset.NumpyDataset": [[3, 5, 1, "", "X"], [3, 2, 1, "", "append"], [3, 5, 1, "", "batch_shape"], [3, 2, 1, "", "check_Xy"], [3, 2, 1, "", "extend"], [3, 5, 1, "", "feature_shape"], [3, 2, 1, "", "find"], [3, 2, 1, "", "from_data"], [3, 2, 1, "", "from_deepchem"], [3, 2, 1, "", "get_shuffle"], [3, 5, 1, "", "ndim"], [3, 2, 1, "", "reshape"], [3, 2, 1, "", "reshape_batch"], [3, 2, 1, "", "reshape_features"], [3, 5, 1, "", "shape"], [3, 5, 1, "", "y"]], "alien.data.dataset.ShuffledDataset": [[3, 5, 1, "", "X"], [3, 2, 1, "", "append"], [3, 5, 1, "", "batch_shape"], [3, 2, 1, "", "check_Xy"], [3, 2, 1, "", "extend"], [3, 2, 1, "", "extend_shuffle"], [3, 5, 1, "", "feature_shape"], [3, 2, 1, "", "find"], [3, 2, 1, "", "from_data"], [3, 2, 1, "", "from_deepchem"], [3, 2, 1, "", "get_shuffle"], [3, 5, 1, "", "ndim"], [3, 2, 1, "", "reshape"], [3, 2, 1, "", "reshape_batch"], [3, 2, 1, "", "reshape_features"], [3, 2, 1, "", "reshuffle"], [3, 5, 1, "", "shape"], [3, 5, 1, "", "y"]], "alien.data.dataset.TeachableDataset": [[3, 5, 1, "", "X"], [3, 2, 1, "", "append"], [3, 5, 1, "", "batch_shape"], [3, 2, 1, "", "check_Xy"], [3, 2, 1, "", "extend"], [3, 5, 1, "", "feature_shape"], [3, 2, 1, "", "find"], [3, 2, 1, "", "from_data"], [3, 2, 1, "", "from_deepchem"], [3, 2, 1, "", "get_shuffle"], [3, 5, 1, "", "ndim"], [3, 2, 1, "", "reshape"], [3, 5, 1, "", "shape"], [3, 5, 1, "", "y"]], "alien.data.dataset.TeachableWrapperDataset": [[3, 5, 1, "", "X"], [3, 2, 1, "", "append"], [3, 5, 1, "", "batch_shape"], [3, 2, 1, "", "check_Xy"], [3, 2, 1, "", "extend"], [3, 5, 1, "", "feature_shape"], [3, 2, 1, "", "find"], [3, 2, 1, "", "from_data"], [3, 2, 1, "", "from_deepchem"], [3, 2, 1, "", "get_shuffle"], [3, 5, 1, "", "ndim"], [3, 2, 1, "", "reshape"], [3, 2, 1, "", "reshape_batch"], [3, 2, 1, "", "reshape_features"], [3, 5, 1, "", "shape"], [3, 5, 1, "", "y"]], "alien.data.dataset.TorchDataset": [[3, 5, 1, "", "X"], [3, 2, 1, "", "append"], [3, 5, 1, "", "batch_shape"], [3, 2, 1, "", "check_Xy"], [3, 2, 1, "", "extend"], [3, 5, 1, "", "feature_shape"], [3, 2, 1, "", "find"], [3, 2, 1, "", "from_data"], [3, 2, 1, "", "from_deepchem"], [3, 2, 1, "", "get_shuffle"], [3, 5, 1, "", "ndim"], [3, 2, 1, "", "reshape"], [3, 2, 1, "", "reshape_batch"], [3, 2, 1, "", "reshape_features"], [3, 5, 1, "", "shape"], [3, 5, 1, "", "y"]], "alien.data.dataset.TupleDataset": [[3, 5, 1, "", "X"], [3, 2, 1, "", "append"], [3, 5, 1, "", "batch_shape"], [3, 2, 1, "", "check_Xy"], [3, 2, 1, "", "extend"], [3, 5, 1, "", "feature_shape"], [3, 2, 1, "", "find"], [3, 2, 1, "", "from_data"], [3, 2, 1, "", "from_deepchem"], [3, 2, 1, "", "get_shuffle"], [3, 5, 1, "", "ndim"], [3, 2, 1, "", "reshape"], [3, 2, 1, "", "reshape_batch"], [3, 2, 1, "", "reshape_features"], [3, 5, 1, "", "shape"], [3, 5, 1, "", "tuple"], [3, 5, 1, "", "y"]], "alien.data.deepchem": [[3, 1, 1, "", "DeepChemDataset"], [3, 4, 1, "", "as_DCDataset"]], "alien.data.deepchem.DeepChemDataset": [[3, 5, 1, "", "X"], [3, 2, 1, "", "append"], [3, 5, 1, "", "batch_shape"], [3, 2, 1, "", "check_Xy"], [3, 2, 1, "", "extend"], [3, 5, 1, "", "feature_shape"], [3, 2, 1, "", "find"], [3, 2, 1, "", "from_csv"], [3, 2, 1, "", "from_data"], [3, 2, 1, "", "from_deepchem"], [3, 2, 1, "", "from_df"], [3, 2, 1, "", "get_featurizer"], [3, 2, 1, "", "get_shuffle"], [3, 5, 1, "", "ndim"], [3, 2, 1, "", "reshape"], [3, 2, 1, "", "reshape_batch"], [3, 2, 1, "", "reshape_features"], [3, 5, 1, "", "shape"], [3, 5, 1, "", "y"]], "alien.decorators": [[1, 4, 1, "", "NEED"], [1, 1, 1, "", "RecursionContext"], [1, 4, 1, "", "default_decorator"], [1, 4, 1, "", "do_normalize"], [1, 4, 1, "", "flatten_batch"], [1, 4, 1, "", "get_Xy"], [1, 4, 1, "", "get_args"], [1, 4, 1, "", "get_defaults_from_self"], [1, 4, 1, "", "no_recursion"], [1, 4, 1, "", "normalize_args"], [1, 4, 1, "", "sig_append"]], "alien.models": [[4, 1, 1, "", "CovarianceRegressor"], [4, 1, 1, "", "EnsembleRegressor"], [4, 1, 1, "", "Model"], [4, 1, 1, "", "Regressor"], [5, 0, 0, "-", "keras"], [6, 0, 0, "-", "pytorch"]], "alien.models.CovarianceRegressor": [[4, 2, 1, "", "covariance"], [4, 2, 1, "", "fit"], [4, 2, 1, "", "fit_model"], [4, 2, 1, "", "fit_uncertainty"], [4, 2, 1, "", "initialize"], [4, 2, 1, "", "load"], [4, 5, 1, "", "ndim"], [4, 2, 1, "", "predict"], [4, 2, 1, "", "predict_ensemble"], [4, 2, 1, "", "predict_samples"], [4, 2, 1, "", "save"], [4, 5, 1, "", "shape"], [4, 2, 1, "", "std_dev"]], "alien.models.EnsembleRegressor": [[4, 2, 1, "", "covariance"], [4, 2, 1, "", "covariance_ensemble"], [4, 2, 1, "", "fit"], [4, 2, 1, "", "fit_model"], [4, 2, 1, "", "fit_uncertainty"], [4, 2, 1, "", "initialize"], [4, 2, 1, "", "load"], [4, 5, 1, "", "ndim"], [4, 2, 1, "", "predict"], [4, 2, 1, "", "predict_ensemble"], [4, 2, 1, "", "predict_samples"], [4, 2, 1, "", "save"], [4, 5, 1, "", "shape"], [4, 2, 1, "", "std_dev"], [4, 2, 1, "", "std_dev_ensemble"]], "alien.models.Model": [[4, 2, 1, "", "fit"], [4, 2, 1, "", "fit_model"], [4, 2, 1, "", "fit_uncertainty"], [4, 2, 1, "", "initialize"], [4, 2, 1, "", "load"], [4, 5, 1, "", "ndim"], [4, 2, 1, "", "predict"], [4, 2, 1, "", "predict_samples"], [4, 2, 1, "", "save"], [4, 5, 1, "", "shape"]], "alien.models.Regressor": [[4, 2, 1, "", "fit"], [4, 2, 1, "", "fit_model"], [4, 2, 1, "", "fit_uncertainty"], [4, 2, 1, "", "initialize"], [4, 2, 1, "", "load"], [4, 5, 1, "", "ndim"], [4, 2, 1, "", "predict"], [4, 2, 1, "", "predict_samples"], [4, 2, 1, "", "save"], [4, 5, 1, "", "shape"]], "alien.models.keras": [[5, 0, 0, "-", "keras"], [5, 0, 0, "-", "utils"]], "alien.models.keras.keras": [[5, 1, 1, "", "KerasRegressor"]], "alien.models.keras.keras.KerasRegressor": [[5, 2, 1, "", "covariance"], [5, 2, 1, "", "covariance_ensemble"], [5, 5, 1, "", "data"], [5, 2, 1, "", "fit"], [5, 2, 1, "", "fit_model"], [5, 2, 1, "", "fit_uncertainty"], [5, 2, 1, "", "fix_dropouts"], [5, 2, 1, "", "get_weights"], [5, 2, 1, "", "initialize"], [5, 2, 1, "", "load"], [5, 5, 1, "", "ndim"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "predict_ensemble"], [5, 2, 1, "", "predict_samples"], [5, 2, 1, "", "save"], [5, 2, 1, "", "save_initial_weights"], [5, 2, 1, "", "set_weights"], [5, 5, 1, "", "shape"], [5, 2, 1, "", "std_dev"], [5, 2, 1, "", "std_dev_ensemble"]], "alien.models.keras.utils": [[5, 4, 1, "", "dropout_call"], [5, 4, 1, "", "get_mod_layers"], [5, 4, 1, "", "humble_batchnorm_call"], [5, 4, 1, "", "modify_dropout"], [5, 4, 1, "", "subobjects"]], "alien.models.pytorch": [[6, 0, 0, "-", "last_layer"], [6, 0, 0, "-", "pytorch"], [6, 0, 0, "-", "training_limits"], [6, 0, 0, "-", "utils"]], "alien.models.pytorch.last_layer": [[6, 1, 1, "", "LastLayerPytorchLinearization"]], "alien.models.pytorch.last_layer.LastLayerPytorchLinearization": [[6, 2, 1, "", "covariance"], [6, 2, 1, "", "covariance_linear"], [6, 5, 1, "", "data"], [6, 5, 1, "", "embedding_method"], [6, 2, 1, "", "find_last_layer"], [6, 2, 1, "", "find_method"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "fit_model"], [6, 2, 1, "", "fit_uncertainty"], [6, 2, 1, "", "initialize"], [6, 2, 1, "", "input_embedding"], [6, 2, 1, "", "last_layer_embedding"], [6, 2, 1, "", "linearization"], [6, 2, 1, "", "load"], [6, 3, 1, "", "method_names"], [6, 5, 1, "", "ndim"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "predict_ensemble"], [6, 2, 1, "", "predict_linear"], [6, 2, 1, "", "predict_samples"], [6, 2, 1, "", "predict_with_embedding"], [6, 2, 1, "", "save"], [6, 2, 1, "", "set_last_layer"], [6, 5, 1, "", "shape"], [6, 2, 1, "", "std_dev"]], "alien.models.pytorch.pytorch": [[6, 1, 1, "", "PytorchRegressor"], [6, 4, 1, "", "init_bias"], [6, 4, 1, "", "init_weights"]], "alien.models.pytorch.pytorch.PytorchRegressor": [[6, 2, 1, "", "covariance"], [6, 2, 1, "", "covariance_ensemble"], [6, 2, 1, "", "covariance_laplace"], [6, 2, 1, "", "covariance_linear"], [6, 5, 1, "", "data"], [6, 5, 1, "", "dtype"], [6, 5, 1, "", "embedding_method"], [6, 2, 1, "", "find_last_layer"], [6, 2, 1, "", "find_method"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "fit_laplace"], [6, 2, 1, "", "fit_model"], [6, 2, 1, "", "fit_uncertainty"], [6, 2, 1, "", "fix_dropouts"], [6, 2, 1, "", "get_lightning_trainer"], [6, 2, 1, "", "initialize"], [6, 2, 1, "", "input_embedding"], [6, 2, 1, "", "last_layer_embedding"], [6, 2, 1, "", "linearization"], [6, 2, 1, "", "load"], [6, 3, 1, "", "method_names"], [6, 5, 1, "", "ndim"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "predict_ensemble"], [6, 2, 1, "", "predict_linear"], [6, 2, 1, "", "predict_samples"], [6, 2, 1, "", "predict_with_embedding"], [6, 2, 1, "", "save"], [6, 2, 1, "", "set_last_layer"], [6, 5, 1, "", "shape"], [6, 2, 1, "", "std_dev"], [6, 2, 1, "", "std_dev_ensemble"]], "alien.models.pytorch.training_limits": [[6, 1, 1, "", "StdLimit"], [6, 1, 1, "", "TrainingLimit"], [6, 4, 1, "", "get_training_limit"]], "alien.models.pytorch.training_limits.StdLimit": [[6, 2, 1, "", "batch_limit"], [6, 3, 1, "", "batches"], [6, 3, 1, "", "epochs"], [6, 3, 1, "", "max_epochs"], [6, 3, 1, "", "max_samples"], [6, 3, 1, "", "min_epochs"], [6, 3, 1, "", "min_samples"], [6, 2, 1, "", "sample_limit"], [6, 3, 1, "", "samples"]], "alien.models.pytorch.training_limits.TrainingLimit": [[6, 2, 1, "", "batch_limit"], [6, 3, 1, "", "batches"], [6, 3, 1, "", "epochs"], [6, 3, 1, "", "max_epochs"], [6, 3, 1, "", "max_samples"], [6, 3, 1, "", "min_epochs"], [6, 3, 1, "", "min_samples"], [6, 2, 1, "", "sample_limit"], [6, 3, 1, "", "samples"]], "alien.models.pytorch.utils": [[6, 4, 1, "", "as_tensor"], [6, 4, 1, "", "dropout_forward"], [6, 4, 1, "", "submodules"]], "alien.sample_generation": [[7, 0, 0, "-", "filter_generator"], [7, 0, 0, "-", "from_set"], [7, 0, 0, "-", "generator"], [7, 0, 0, "-", "random_generator"], [7, 0, 0, "-", "transformation"]], "alien.sample_generation.filter_generator": [[7, 1, 1, "", "Filter"]], "alien.sample_generation.filter_generator.Filter": [[7, 2, 1, "", "generate_sample"], [7, 2, 1, "", "generate_samples"]], "alien.sample_generation.from_set": [[7, 1, 1, "", "SetSampleGenerator"], [7, 1, 1, "", "WrappedGenerator"]], "alien.sample_generation.from_set.SetSampleGenerator": [[7, 2, 1, "", "generate_sample"], [7, 2, 1, "", "generate_samples"], [7, 5, 1, "", "labels"], [7, 2, 1, "", "remove_data_indices"], [7, 2, 1, "", "remove_sample"], [7, 2, 1, "", "remove_samples"], [7, 2, 1, "", "reshuffle"]], "alien.sample_generation.from_set.WrappedGenerator": [[7, 2, 1, "", "generate_sample"], [7, 2, 1, "", "generate_samples"]], "alien.sample_generation.generator": [[7, 1, 1, "", "SampleGenerator"]], "alien.sample_generation.generator.SampleGenerator": [[7, 2, 1, "", "generate_sample"], [7, 2, 1, "", "generate_samples"]], "alien.sample_generation.random_generator": [[7, 1, 1, "", "RandomSampleGenerator"], [7, 1, 1, "", "UniformSampleGenerator"]], "alien.sample_generation.random_generator.RandomSampleGenerator": [[7, 2, 1, "", "generate_sample"], [7, 2, 1, "", "generate_samples"]], "alien.sample_generation.random_generator.UniformSampleGenerator": [[7, 2, 1, "", "generate_sample"], [7, 2, 1, "", "generate_samples"]], "alien.sample_generation.transformation": [[7, 1, 1, "", "TransformedSampleGenerator"]], "alien.sample_generation.transformation.TransformedSampleGenerator": [[7, 2, 1, "", "generate_sample"], [7, 2, 1, "", "generate_samples"]], "alien.selection": [[8, 1, 1, "", "BAITSelector"], [8, 1, 1, "", "CovarianceSelector"], [8, 1, 1, "", "KmeansSelector"], [8, 1, 1, "", "RandomSelector"], [8, 1, 1, "", "SampleSelector"], [8, 1, 1, "", "TimestampSelector"]], "alien.selection.BAITSelector": [[8, 2, 1, "", "model_predict"], [8, 2, 1, "", "prediction_prior"], [8, 2, 1, "", "select"]], "alien.selection.CovarianceSelector": [[8, 2, 1, "", "get_prefilter"], [8, 2, 1, "", "model_predict"], [8, 2, 1, "", "prediction_prior"], [8, 2, 1, "", "select"]], "alien.selection.KmeansSelector": [[8, 2, 1, "", "model_predict"], [8, 2, 1, "", "prediction_prior"], [8, 2, 1, "", "select"]], "alien.selection.RandomSelector": [[8, 2, 1, "", "model_predict"], [8, 2, 1, "", "prediction_prior"], [8, 2, 1, "", "select"]], "alien.selection.SampleSelector": [[8, 2, 1, "", "select"]], "alien.selection.TimestampSelector": [[8, 2, 1, "", "model_predict"], [8, 2, 1, "", "prediction_prior"], [8, 2, 1, "", "select"]], "alien.stats": [[1, 4, 1, "", "augment_ensemble"], [1, 4, 1, "", "covariance_from_ensemble"], [1, 4, 1, "", "covariance_from_similarity"], [1, 4, 1, "", "ensemble_from_covariance"], [1, 4, 1, "", "group_edges"], [1, 4, 1, "", "group_sizes"], [1, 4, 1, "", "joint_entropy"], [1, 4, 1, "", "joint_entropy_regularized"], [1, 4, 1, "", "multiply_std_dev"], [1, 4, 1, "", "similarity_cosine"], [1, 4, 1, "", "similarity_exp"], [1, 4, 1, "", "similarity_gaussian"], [1, 4, 1, "", "std_dev_from_ensemble"]], "alien.utils": [[1, 1, 1, "", "CachedDict"], [1, 1, 1, "", "SelfDict"], [1, 4, 1, "", "add_slice"], [1, 4, 1, "", "alias"], [1, 4, 1, "", "any_get"], [1, 4, 1, "", "any_pop"], [1, 4, 1, "", "as_list"], [1, 4, 1, "", "as_numpy"], [1, 4, 1, "", "axes_except"], [1, 1, 1, "", "chunks"], [1, 4, 1, "", "concatenate"], [1, 4, 1, "", "diagonal"], [1, 4, 1, "", "dict_get"], [1, 4, 1, "", "dict_pop"], [1, 4, 1, "", "dot_last"], [1, 4, 1, "", "flatten"], [1, 4, 1, "", "frac_enum"], [1, 4, 1, "", "is_iterable"], [1, 4, 1, "", "is_one"], [1, 4, 1, "", "isint"], [1, 4, 1, "", "join"], [1, 4, 1, "", "match"], [1, 4, 1, "", "multisearch"], [1, 4, 1, "", "no_default"], [1, 4, 1, "", "ranges"], [1, 4, 1, "", "reshape"], [1, 4, 1, "", "seed_all"], [1, 4, 1, "", "shift_seed"], [1, 4, 1, "", "std_keys"], [1, 4, 1, "", "sum_except"], [1, 4, 1, "", "ufunc"], [1, 4, 1, "", "update_copy"], [1, 4, 1, "", "zip_dict"]], "alien.utils.SelfDict": [[1, 2, 1, "", "clear"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "fromkeys"], [1, 2, 1, "", "get"], [1, 2, 1, "", "items"], [1, 2, 1, "", "keys"], [1, 2, 1, "", "pop"], [1, 2, 1, "", "popitem"], [1, 2, 1, "", "setdefault"], [1, 2, 1, "", "update"], [1, 2, 1, "", "values"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"what": 0, "i": 0, "activ": 0, "learn": [0, 4], "alien": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12], "packag": [1, 5, 6, 9], "subpackag": 1, "submodul": [1, 2, 3, 5, 6, 7, 9], "class": [1, 4], "modul": [1, 2, 3, 5, 6, 7, 9], "decor": 1, "stat": 1, "util": [1, 5, 6], "content": [1, 2, 3, 5, 6, 7, 9, 10], "benchmark": 2, "metric": 2, "oracl": 2, "retrospect": 2, "uncertainty_metr": 2, "data": 3, "dataset": 3, "deepchem": 3, "model": [4, 5, 6], "deep": 4, "how": 4, "choos": 4, "gradient": 4, "boost": 4, "other": 4, "abstract": 4, "base": 4, "kera": 5, "pytorch": 6, "last_lay": 6, "lightn": 6, "training_limit": 6, "sample_gener": 7, "filter_gener": 7, "from_set": 7, "gener": 7, "random_gener": 7, "transform": 7, "select": 8, "sampleselector": 8, "covarianceselector": 8, "baitselector": 8, "kmeansselector": 8, "randomselector": 8, "timestampselector": 8, "doc": 9, "conf": 9, "indic": 10, "tabl": 10, "instal": 11}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"What is active learning?": [[0, "what-is-active-learning"]], "alien package": [[1, "alien-package"]], "Subpackages": [[1, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [9, "submodules"]], "alien.classes module": [[1, "module-alien.classes"]], "alien.decorators module": [[1, "module-alien.decorators"]], "alien.stats module": [[1, "module-alien.stats"]], "alien.utils module": [[1, "module-alien.utils"]], "Module contents": [[1, "module-alien"], [2, "module-alien.benchmarks"], [3, "module-0"], [5, "module-alien.models.keras"], [6, "module-alien.models.pytorch"], [7, "module-alien.sample_generation"], [9, "module-docs"]], "alien.benchmarks": [[2, "alien-benchmarks"]], "alien.benchmarks.metrics module": [[2, "module-alien.benchmarks.metrics"]], "alien.benchmarks.oracle module": [[2, "module-alien.benchmarks.oracle"]], "alien.benchmarks.retrospective module": [[2, "module-alien.benchmarks.retrospective"]], "alien.benchmarks.uncertainty_metrics module": [[2, "module-alien.benchmarks.uncertainty_metrics"]], "alien.data": [[3, "module-alien.data"]], "alien.data.dataset module": [[3, "module-alien.data.dataset"]], "alien.data.deepchem module": [[3, "module-alien.data.deepchem"]], "alien.models": [[4, "module-alien.models"]], "Deep learning models": [[4, "deep-learning-models"]], "How to choose?": [[4, "how-to-choose"]], "Gradient boosting models": [[4, "gradient-boosting-models"]], "Other models": [[4, "other-models"]], "Abstract base classes": [[4, "abstract-base-classes"]], "alien.models.keras package": [[5, "alien-models-keras-package"]], "alien.models.keras.keras module": [[5, "module-alien.models.keras.keras"]], "alien.models.keras.utils module": [[5, "module-alien.models.keras.utils"]], "alien.models.pytorch package": [[6, "alien-models-pytorch-package"]], "alien.models.pytorch.last_layer module": [[6, "module-alien.models.pytorch.last_layer"]], "alien.models.pytorch.lightning module": [[6, "alien-models-pytorch-lightning-module"]], "alien.models.pytorch.pytorch module": [[6, "module-alien.models.pytorch.pytorch"]], "alien.models.pytorch.training_limits module": [[6, "module-alien.models.pytorch.training_limits"]], "alien.models.pytorch.utils module": [[6, "module-alien.models.pytorch.utils"]], "alien.sample_generation": [[7, "alien-sample-generation"]], "alien.sample_generation.filter_generator module": [[7, "module-alien.sample_generation.filter_generator"]], "alien.sample_generation.from_set module": [[7, "module-alien.sample_generation.from_set"]], "alien.sample_generation.generator module": [[7, "module-alien.sample_generation.generator"]], "alien.sample_generation.random_generator module": [[7, "module-alien.sample_generation.random_generator"]], "alien.sample_generation.transformation module": [[7, "module-alien.sample_generation.transformation"]], "alien.selection": [[8, "alien-selection"]], "SampleSelector": [[8, "sampleselector"]], "CovarianceSelector": [[8, "covarianceselector"]], "BAITSelector": [[8, "baitselector"]], "KmeansSelector": [[8, "kmeansselector"]], "RandomSelector": [[8, "randomselector"]], "TimestampSelector": [[8, "timestampselector"]], "docs package": [[9, "docs-package"]], "docs.conf module": [[9, "docs-conf-module"]], "ALIEN": [[10, "alien"]], "Contents:": [[10, null]], "Indices and tables": [[10, "indices-and-tables"]], "Installation": [[11, "installation"]], "alien": [[12, "alien"]]}, "indexentries": {"cacheddict (class in alien.utils)": [[1, "alien.utils.CachedDict"]], "need() (in module alien.decorators)": [[1, "alien.decorators.NEED"]], "recursioncontext (class in alien.decorators)": [[1, "alien.decorators.RecursionContext"]], "selfdict (class in alien.utils)": [[1, "alien.utils.SelfDict"]], "abstract_group() (in module alien.classes)": [[1, "alien.classes.abstract_group"]], "add_slice() (in module alien.utils)": [[1, "alien.utils.add_slice"]], "alias() (in module alien.utils)": [[1, "alien.utils.alias"]], "alien": [[1, "module-alien"]], "alien.classes": [[1, "module-alien.classes"]], "alien.decorators": [[1, "module-alien.decorators"]], "alien.stats": [[1, "module-alien.stats"]], "alien.utils": [[1, "module-alien.utils"]], "any_get() (in module alien.utils)": [[1, "alien.utils.any_get"]], "any_pop() (in module alien.utils)": [[1, "alien.utils.any_pop"]], "as_list() (in module alien.utils)": [[1, "alien.utils.as_list"]], "as_numpy() (in module alien.utils)": [[1, "alien.utils.as_numpy"]], "augment_ensemble() (in module alien.stats)": [[1, "alien.stats.augment_ensemble"]], "axes_except() (in module alien.utils)": [[1, "alien.utils.axes_except"]], "chunks (class in alien.utils)": [[1, "alien.utils.chunks"]], "clear() (alien.utils.selfdict method)": [[1, "alien.utils.SelfDict.clear"]], "concatenate() (in module alien.utils)": [[1, "alien.utils.concatenate"]], "copy() (alien.utils.selfdict method)": [[1, "alien.utils.SelfDict.copy"]], "covariance_from_ensemble() (in module alien.stats)": [[1, "alien.stats.covariance_from_ensemble"]], "covariance_from_similarity() (in module alien.stats)": [[1, "alien.stats.covariance_from_similarity"]], "default_decorator() (in module alien.decorators)": [[1, "alien.decorators.default_decorator"]], "diagonal() (in module alien.utils)": [[1, "alien.utils.diagonal"]], "dict_get() (in module alien.utils)": [[1, "alien.utils.dict_get"]], "dict_pop() (in module alien.utils)": [[1, "alien.utils.dict_pop"]], "do_normalize() (in module alien.decorators)": [[1, "alien.decorators.do_normalize"]], "dot_last() (in module alien.utils)": [[1, "alien.utils.dot_last"]], "ensemble_from_covariance() (in module alien.stats)": [[1, "alien.stats.ensemble_from_covariance"]], "final() (in module alien.classes)": [[1, "alien.classes.final"]], "flatten() (in module alien.utils)": [[1, "alien.utils.flatten"]], "flatten_batch() (in module alien.decorators)": [[1, "alien.decorators.flatten_batch"]], "frac_enum() (in module alien.utils)": [[1, "alien.utils.frac_enum"]], "fromkeys() (alien.utils.selfdict method)": [[1, "alien.utils.SelfDict.fromkeys"]], "get() (alien.utils.selfdict method)": [[1, "alien.utils.SelfDict.get"]], "get_xy() (in module alien.decorators)": [[1, "alien.decorators.get_Xy"]], "get_args() (in module alien.decorators)": [[1, "alien.decorators.get_args"]], "get_defaults_from_self() (in module alien.decorators)": [[1, "alien.decorators.get_defaults_from_self"]], "group_edges() (in module alien.stats)": [[1, "alien.stats.group_edges"]], "group_sizes() (in module alien.stats)": [[1, "alien.stats.group_sizes"]], "init_subclass() (in module alien.classes)": [[1, "alien.classes.init_subclass"]], "is_iterable() (in module alien.utils)": [[1, "alien.utils.is_iterable"]], "is_one() (in module alien.utils)": [[1, "alien.utils.is_one"]], "isint() (in module alien.utils)": [[1, "alien.utils.isint"]], "items() (alien.utils.selfdict method)": [[1, "alien.utils.SelfDict.items"]], "join() (in module alien.utils)": [[1, "alien.utils.join"]], "joint_entropy() (in module alien.stats)": [[1, "alien.stats.joint_entropy"]], "joint_entropy_regularized() (in module alien.stats)": [[1, "alien.stats.joint_entropy_regularized"]], "keys() (alien.utils.selfdict method)": [[1, "alien.utils.SelfDict.keys"]], "match() (in module alien.utils)": [[1, "alien.utils.match"]], "module": [[1, "module-alien"], [1, "module-alien.classes"], [1, "module-alien.decorators"], [1, "module-alien.stats"], [1, "module-alien.utils"], [2, "module-alien.benchmarks"], [2, "module-alien.benchmarks.metrics"], [2, "module-alien.benchmarks.oracle"], [2, "module-alien.benchmarks.retrospective"], [2, "module-alien.benchmarks.uncertainty_metrics"], [3, "module-0"], [3, "module-alien.data"], [3, "module-alien.data.dataset"], [3, "module-alien.data.deepchem"], [4, "module-alien.models"], [5, "module-alien.models.keras"], [5, "module-alien.models.keras.keras"], [5, "module-alien.models.keras.utils"], [6, "module-alien.models.pytorch"], [6, "module-alien.models.pytorch.last_layer"], [6, "module-alien.models.pytorch.pytorch"], [6, "module-alien.models.pytorch.training_limits"], [6, "module-alien.models.pytorch.utils"], [7, "module-alien.sample_generation"], [7, "module-alien.sample_generation.filter_generator"], [7, "module-alien.sample_generation.from_set"], [7, "module-alien.sample_generation.generator"], [7, "module-alien.sample_generation.random_generator"], [7, "module-alien.sample_generation.transformation"], [8, "module-alien.selection"], [9, "module-docs"]], "multiply_std_dev() (in module alien.stats)": [[1, "alien.stats.multiply_std_dev"]], "multisearch() (in module alien.utils)": [[1, "alien.utils.multisearch"]], "no_default() (in module alien.utils)": [[1, "alien.utils.no_default"]], "no_recursion() (in module alien.decorators)": [[1, "alien.decorators.no_recursion"]], "normalize_args() (in module alien.decorators)": [[1, "alien.decorators.normalize_args"]], "override() (in module alien.classes)": [[1, "alien.classes.override"]], "parent_locals() (in module alien.classes)": [[1, "alien.classes.parent_locals"]], "pop() (alien.utils.selfdict method)": [[1, "alien.utils.SelfDict.pop"]], "popitem() (alien.utils.selfdict method)": [[1, "alien.utils.SelfDict.popitem"]], "ranges() (in module alien.utils)": [[1, "alien.utils.ranges"]], "reshape() (in module alien.utils)": [[1, "alien.utils.reshape"]], "seed_all() (in module alien.utils)": [[1, "alien.utils.seed_all"]], "setdefault() (alien.utils.selfdict method)": [[1, "alien.utils.SelfDict.setdefault"]], "shift_seed() (in module alien.utils)": [[1, "alien.utils.shift_seed"]], "sig_append() (in module alien.decorators)": [[1, "alien.decorators.sig_append"]], "similarity_cosine() (in module alien.stats)": [[1, "alien.stats.similarity_cosine"]], "similarity_exp() (in module alien.stats)": [[1, "alien.stats.similarity_exp"]], "similarity_gaussian() (in module alien.stats)": [[1, "alien.stats.similarity_gaussian"]], "std_dev_from_ensemble() (in module alien.stats)": [[1, "alien.stats.std_dev_from_ensemble"]], "std_keys() (in module alien.utils)": [[1, "alien.utils.std_keys"]], "sum_except() (in module alien.utils)": [[1, "alien.utils.sum_except"]], "ufunc() (in module alien.utils)": [[1, "alien.utils.ufunc"]], "update() (alien.utils.selfdict method)": [[1, "alien.utils.SelfDict.update"]], "update_copy() (in module alien.utils)": [[1, "alien.utils.update_copy"]], "values() (alien.utils.selfdict method)": [[1, "alien.utils.SelfDict.values"]], "zip_dict() (in module alien.utils)": [[1, "alien.utils.zip_dict"]], "kl_divergence() (in module alien.benchmarks.uncertainty_metrics)": [[2, "alien.benchmarks.uncertainty_metrics.KL_divergence"]], "oracle (class in alien.benchmarks.oracle)": [[2, "alien.benchmarks.oracle.Oracle"]], "rmse (class in alien.benchmarks.metrics)": [[2, "alien.benchmarks.metrics.RMSE"]], "rmse() (alien.benchmarks.metrics.scatter method)": [[2, "alien.benchmarks.metrics.Scatter.RMSE"]], "scatter (class in alien.benchmarks.metrics)": [[2, "alien.benchmarks.metrics.Scatter"]], "score (class in alien.benchmarks.metrics)": [[2, "alien.benchmarks.metrics.Score"]], "setoracle (class in alien.benchmarks.oracle)": [[2, "alien.benchmarks.oracle.SetOracle"]], "topscore (class in alien.benchmarks.metrics)": [[2, "alien.benchmarks.metrics.TopScore"]], "alien.benchmarks": [[2, "module-alien.benchmarks"]], "alien.benchmarks.metrics": [[2, "module-alien.benchmarks.metrics"]], "alien.benchmarks.oracle": [[2, "module-alien.benchmarks.oracle"]], "alien.benchmarks.retrospective": [[2, "module-alien.benchmarks.retrospective"]], "alien.benchmarks.uncertainty_metrics": [[2, "module-alien.benchmarks.uncertainty_metrics"]], "append() (alien.benchmarks.metrics.rmse method)": [[2, "alien.benchmarks.metrics.RMSE.append"]], "append() (alien.benchmarks.metrics.score method)": [[2, "alien.benchmarks.metrics.Score.append"]], "append() (alien.benchmarks.metrics.topscore method)": [[2, "alien.benchmarks.metrics.TopScore.append"]], "average_runs() (alien.benchmarks.metrics.rmse static method)": [[2, "alien.benchmarks.metrics.RMSE.average_runs"]], "average_runs() (alien.benchmarks.metrics.score static method)": [[2, "alien.benchmarks.metrics.Score.average_runs"]], "average_runs() (alien.benchmarks.metrics.topscore static method)": [[2, "alien.benchmarks.metrics.TopScore.average_runs"]], "best_multiple() (in module alien.benchmarks.uncertainty_metrics)": [[2, "alien.benchmarks.uncertainty_metrics.best_multiple"]], "binary_optimize() (in module alien.benchmarks.uncertainty_metrics)": [[2, "alien.benchmarks.uncertainty_metrics.binary_optimize"]], "compute() (alien.benchmarks.metrics.rmse method)": [[2, "alien.benchmarks.metrics.RMSE.compute"]], "compute() (alien.benchmarks.metrics.scatter method)": [[2, "alien.benchmarks.metrics.Scatter.compute"]], "compute() (alien.benchmarks.metrics.topscore method)": [[2, "alien.benchmarks.metrics.TopScore.compute"]], "conf_int() (in module alien.benchmarks.metrics)": [[2, "alien.benchmarks.metrics.conf_int"]], "default_filename (alien.benchmarks.metrics.rmse attribute)": [[2, "alien.benchmarks.metrics.RMSE.default_filename"]], "default_filename (alien.benchmarks.metrics.score attribute)": [[2, "alien.benchmarks.metrics.Score.default_filename"]], "default_filename (alien.benchmarks.metrics.topscore attribute)": [[2, "alien.benchmarks.metrics.TopScore.default_filename"]], "from_folder() (alien.benchmarks.metrics.rmse static method)": [[2, "alien.benchmarks.metrics.RMSE.from_folder"]], "generate_sample() (alien.benchmarks.oracle.setoracle method)": [[2, "alien.benchmarks.oracle.SetOracle.generate_sample"]], "generate_samples() (alien.benchmarks.oracle.setoracle method)": [[2, "alien.benchmarks.oracle.SetOracle.generate_samples"]], "get_label() (alien.benchmarks.oracle.oracle method)": [[2, "alien.benchmarks.oracle.Oracle.get_label"]], "get_label() (alien.benchmarks.oracle.setoracle method)": [[2, "alien.benchmarks.oracle.SetOracle.get_label"]], "get_labels() (alien.benchmarks.oracle.oracle method)": [[2, "alien.benchmarks.oracle.Oracle.get_labels"]], "get_labels() (alien.benchmarks.oracle.setoracle method)": [[2, "alien.benchmarks.oracle.SetOracle.get_labels"]], "labels (alien.benchmarks.oracle.setoracle property)": [[2, "alien.benchmarks.oracle.SetOracle.labels"]], "load() (alien.benchmarks.metrics.rmse static method)": [[2, "alien.benchmarks.metrics.RMSE.load"]], "load() (alien.benchmarks.metrics.scatter static method)": [[2, "alien.benchmarks.metrics.Scatter.load"]], "load() (alien.benchmarks.metrics.score static method)": [[2, "alien.benchmarks.metrics.Score.load"]], "load() (alien.benchmarks.metrics.topscore static method)": [[2, "alien.benchmarks.metrics.TopScore.load"]], "load_many() (alien.benchmarks.metrics.rmse static method)": [[2, "alien.benchmarks.metrics.RMSE.load_many"]], "load_many() (alien.benchmarks.metrics.score static method)": [[2, "alien.benchmarks.metrics.Score.load_many"]], "load_many() (alien.benchmarks.metrics.topscore static method)": [[2, "alien.benchmarks.metrics.TopScore.load_many"]], "plot() (alien.benchmarks.metrics.scatter method)": [[2, "alien.benchmarks.metrics.Scatter.plot"]], "plot_errors() (in module alien.benchmarks.uncertainty_metrics)": [[2, "alien.benchmarks.uncertainty_metrics.plot_errors"]], "plot_scores() (in module alien.benchmarks.metrics)": [[2, "alien.benchmarks.metrics.plot_scores"]], "remove_data_indices() (alien.benchmarks.oracle.setoracle method)": [[2, "alien.benchmarks.oracle.SetOracle.remove_data_indices"]], "remove_sample() (alien.benchmarks.oracle.setoracle method)": [[2, "alien.benchmarks.oracle.SetOracle.remove_sample"]], "remove_samples() (alien.benchmarks.oracle.setoracle method)": [[2, "alien.benchmarks.oracle.SetOracle.remove_samples"]], "reshuffle() (alien.benchmarks.oracle.setoracle method)": [[2, "alien.benchmarks.oracle.SetOracle.reshuffle"]], "run_experiments() (in module alien.benchmarks.retrospective)": [[2, "alien.benchmarks.retrospective.run_experiments"]], "save() (alien.benchmarks.metrics.rmse method)": [[2, "alien.benchmarks.metrics.RMSE.save"]], "save() (alien.benchmarks.metrics.scatter method)": [[2, "alien.benchmarks.metrics.Scatter.save"]], "save() (alien.benchmarks.metrics.score method)": [[2, "alien.benchmarks.metrics.Score.save"]], "save() (alien.benchmarks.metrics.topscore method)": [[2, "alien.benchmarks.metrics.TopScore.save"]], "search_lower() (in module alien.benchmarks.uncertainty_metrics)": [[2, "alien.benchmarks.uncertainty_metrics.search_lower"]], "search_upper() (in module alien.benchmarks.uncertainty_metrics)": [[2, "alien.benchmarks.uncertainty_metrics.search_upper"]], "sem() (in module alien.benchmarks.metrics)": [[2, "alien.benchmarks.metrics.sem"]], "arraydataset (class in alien.data.dataset)": [[3, "alien.data.dataset.ArrayDataset"]], "dataset (class in alien.data.dataset)": [[3, "alien.data.dataset.Dataset"]], "deepchemdataset (class in alien.data.deepchem)": [[3, "alien.data.deepchem.DeepChemDataset"]], "dictdataset (class in alien.data.dataset)": [[3, "alien.data.dataset.DictDataset"]], "numpydataset (class in alien.data.dataset)": [[3, "alien.data.dataset.NumpyDataset"]], "shuffleddataset (class in alien.data.dataset)": [[3, "alien.data.dataset.ShuffledDataset"]], "teachabledataset (class in alien.data.dataset)": [[3, "alien.data.dataset.TeachableDataset"]], "teachablewrapperdataset (class in alien.data.dataset)": [[3, "alien.data.dataset.TeachableWrapperDataset"]], "torchdataset (class in alien.data.dataset)": [[3, "alien.data.dataset.TorchDataset"]], "tupledataset (class in alien.data.dataset)": [[3, "alien.data.dataset.TupleDataset"]], "x (alien.data.dataset.arraydataset property)": [[3, "alien.data.dataset.ArrayDataset.X"]], "x (alien.data.dataset.dataset property)": [[3, "alien.data.dataset.Dataset.X"]], "x (alien.data.dataset.dictdataset property)": [[3, "alien.data.dataset.DictDataset.X"]], "x (alien.data.dataset.numpydataset property)": [[3, "alien.data.dataset.NumpyDataset.X"]], "x (alien.data.dataset.shuffleddataset property)": [[3, "alien.data.dataset.ShuffledDataset.X"]], "x (alien.data.dataset.teachabledataset property)": [[3, "alien.data.dataset.TeachableDataset.X"]], "x (alien.data.dataset.teachablewrapperdataset property)": [[3, "alien.data.dataset.TeachableWrapperDataset.X"]], "x (alien.data.dataset.torchdataset property)": [[3, "alien.data.dataset.TorchDataset.X"]], "x (alien.data.dataset.tupledataset property)": [[3, "alien.data.dataset.TupleDataset.X"]], "x (alien.data.deepchem.deepchemdataset property)": [[3, "alien.data.deepchem.DeepChemDataset.X"]], "alien.data": [[3, "module-0"], [3, "module-alien.data"]], "alien.data.dataset": [[3, "module-alien.data.dataset"]], "alien.data.deepchem": [[3, "module-alien.data.deepchem"]], "append() (alien.data.dataset.arraydataset method)": [[3, "alien.data.dataset.ArrayDataset.append"]], "append() (alien.data.dataset.dictdataset method)": [[3, "alien.data.dataset.DictDataset.append"]], "append() (alien.data.dataset.numpydataset method)": [[3, "alien.data.dataset.NumpyDataset.append"]], "append() (alien.data.dataset.shuffleddataset method)": [[3, "alien.data.dataset.ShuffledDataset.append"]], "append() (alien.data.dataset.teachabledataset method)": [[3, "alien.data.dataset.TeachableDataset.append"]], "append() (alien.data.dataset.teachablewrapperdataset method)": [[3, "alien.data.dataset.TeachableWrapperDataset.append"]], "append() (alien.data.dataset.torchdataset method)": [[3, "alien.data.dataset.TorchDataset.append"]], "append() (alien.data.dataset.tupledataset method)": [[3, "alien.data.dataset.TupleDataset.append"]], "append() (alien.data.deepchem.deepchemdataset method)": [[3, "alien.data.deepchem.DeepChemDataset.append"]], "as_dcdataset() (in module alien.data.deepchem)": [[3, "alien.data.deepchem.as_DCDataset"]], "batch_shape (alien.data.dataset.arraydataset property)": [[3, "alien.data.dataset.ArrayDataset.batch_shape"]], "batch_shape (alien.data.dataset.dataset property)": [[3, "alien.data.dataset.Dataset.batch_shape"]], "batch_shape (alien.data.dataset.dictdataset property)": [[3, "alien.data.dataset.DictDataset.batch_shape"]], "batch_shape (alien.data.dataset.numpydataset property)": [[3, "alien.data.dataset.NumpyDataset.batch_shape"]], "batch_shape (alien.data.dataset.shuffleddataset property)": [[3, "alien.data.dataset.ShuffledDataset.batch_shape"]], "batch_shape (alien.data.dataset.teachabledataset property)": [[3, "alien.data.dataset.TeachableDataset.batch_shape"]], "batch_shape (alien.data.dataset.teachablewrapperdataset property)": [[3, "alien.data.dataset.TeachableWrapperDataset.batch_shape"]], "batch_shape (alien.data.dataset.torchdataset property)": [[3, "alien.data.dataset.TorchDataset.batch_shape"]], "batch_shape (alien.data.dataset.tupledataset property)": [[3, "alien.data.dataset.TupleDataset.batch_shape"]], "batch_shape (alien.data.deepchem.deepchemdataset property)": [[3, "alien.data.deepchem.DeepChemDataset.batch_shape"]], "check_xy() (alien.data.dataset.arraydataset method)": [[3, "alien.data.dataset.ArrayDataset.check_Xy"]], "check_xy() (alien.data.dataset.dataset method)": [[3, "alien.data.dataset.Dataset.check_Xy"]], "check_xy() (alien.data.dataset.dictdataset method)": [[3, "alien.data.dataset.DictDataset.check_Xy"]], "check_xy() (alien.data.dataset.numpydataset method)": [[3, "alien.data.dataset.NumpyDataset.check_Xy"]], "check_xy() (alien.data.dataset.shuffleddataset method)": [[3, "alien.data.dataset.ShuffledDataset.check_Xy"]], "check_xy() (alien.data.dataset.teachabledataset method)": [[3, "alien.data.dataset.TeachableDataset.check_Xy"]], "check_xy() (alien.data.dataset.teachablewrapperdataset method)": [[3, "alien.data.dataset.TeachableWrapperDataset.check_Xy"]], "check_xy() (alien.data.dataset.torchdataset method)": [[3, "alien.data.dataset.TorchDataset.check_Xy"]], "check_xy() (alien.data.dataset.tupledataset method)": [[3, "alien.data.dataset.TupleDataset.check_Xy"]], "check_xy() (alien.data.deepchem.deepchemdataset method)": [[3, "alien.data.deepchem.DeepChemDataset.check_Xy"]], "compute_bdim() (in module alien.data.dataset)": [[3, "alien.data.dataset.compute_bdim"]], "extend() (alien.data.dataset.arraydataset method)": [[3, "alien.data.dataset.ArrayDataset.extend"]], "extend() (alien.data.dataset.dictdataset method)": [[3, "alien.data.dataset.DictDataset.extend"]], "extend() (alien.data.dataset.numpydataset method)": [[3, "alien.data.dataset.NumpyDataset.extend"]], "extend() (alien.data.dataset.shuffleddataset method)": [[3, "alien.data.dataset.ShuffledDataset.extend"]], "extend() (alien.data.dataset.teachabledataset method)": [[3, "alien.data.dataset.TeachableDataset.extend"]], "extend() (alien.data.dataset.teachablewrapperdataset method)": [[3, "alien.data.dataset.TeachableWrapperDataset.extend"]], "extend() (alien.data.dataset.torchdataset method)": [[3, "alien.data.dataset.TorchDataset.extend"]], "extend() (alien.data.dataset.tupledataset method)": [[3, "alien.data.dataset.TupleDataset.extend"]], "extend() (alien.data.deepchem.deepchemdataset method)": [[3, "alien.data.deepchem.DeepChemDataset.extend"]], "extend_shuffle() (alien.data.dataset.shuffleddataset method)": [[3, "alien.data.dataset.ShuffledDataset.extend_shuffle"]], "feature_shape (alien.data.dataset.arraydataset property)": [[3, "alien.data.dataset.ArrayDataset.feature_shape"]], "feature_shape (alien.data.dataset.dataset property)": [[3, "alien.data.dataset.Dataset.feature_shape"]], "feature_shape (alien.data.dataset.dictdataset property)": [[3, "alien.data.dataset.DictDataset.feature_shape"]], "feature_shape (alien.data.dataset.numpydataset property)": [[3, "alien.data.dataset.NumpyDataset.feature_shape"]], "feature_shape (alien.data.dataset.shuffleddataset property)": [[3, "alien.data.dataset.ShuffledDataset.feature_shape"]], "feature_shape (alien.data.dataset.teachabledataset property)": [[3, "alien.data.dataset.TeachableDataset.feature_shape"]], "feature_shape (alien.data.dataset.teachablewrapperdataset property)": [[3, "alien.data.dataset.TeachableWrapperDataset.feature_shape"]], "feature_shape (alien.data.dataset.torchdataset property)": [[3, "alien.data.dataset.TorchDataset.feature_shape"]], "feature_shape (alien.data.dataset.tupledataset property)": [[3, "alien.data.dataset.TupleDataset.feature_shape"]], "feature_shape (alien.data.deepchem.deepchemdataset property)": [[3, "alien.data.deepchem.DeepChemDataset.feature_shape"]], "find() (alien.data.dataset.arraydataset method)": [[3, "alien.data.dataset.ArrayDataset.find"]], "find() (alien.data.dataset.dataset method)": [[3, "alien.data.dataset.Dataset.find"]], "find() (alien.data.dataset.dictdataset method)": [[3, "alien.data.dataset.DictDataset.find"]], "find() (alien.data.dataset.numpydataset method)": [[3, "alien.data.dataset.NumpyDataset.find"]], "find() (alien.data.dataset.shuffleddataset method)": [[3, "alien.data.dataset.ShuffledDataset.find"]], "find() (alien.data.dataset.teachabledataset method)": [[3, "alien.data.dataset.TeachableDataset.find"]], "find() (alien.data.dataset.teachablewrapperdataset method)": [[3, "alien.data.dataset.TeachableWrapperDataset.find"]], "find() (alien.data.dataset.torchdataset method)": [[3, "alien.data.dataset.TorchDataset.find"]], "find() (alien.data.dataset.tupledataset method)": [[3, "alien.data.dataset.TupleDataset.find"]], "find() (alien.data.deepchem.deepchemdataset method)": [[3, "alien.data.deepchem.DeepChemDataset.find"]], "from_csv() (alien.data.deepchem.deepchemdataset static method)": [[3, "alien.data.deepchem.DeepChemDataset.from_csv"]], "from_data() (alien.data.dataset.arraydataset static method)": [[3, "alien.data.dataset.ArrayDataset.from_data"]], "from_data() (alien.data.dataset.dataset static method)": [[3, "alien.data.dataset.Dataset.from_data"]], "from_data() (alien.data.dataset.dictdataset static method)": [[3, "alien.data.dataset.DictDataset.from_data"]], "from_data() (alien.data.dataset.numpydataset static method)": [[3, "alien.data.dataset.NumpyDataset.from_data"]], "from_data() (alien.data.dataset.shuffleddataset static method)": [[3, "alien.data.dataset.ShuffledDataset.from_data"]], "from_data() (alien.data.dataset.teachabledataset static method)": [[3, "alien.data.dataset.TeachableDataset.from_data"]], "from_data() (alien.data.dataset.teachablewrapperdataset static method)": [[3, "alien.data.dataset.TeachableWrapperDataset.from_data"]], "from_data() (alien.data.dataset.torchdataset static method)": [[3, "alien.data.dataset.TorchDataset.from_data"]], "from_data() (alien.data.dataset.tupledataset static method)": [[3, "alien.data.dataset.TupleDataset.from_data"]], "from_data() (alien.data.deepchem.deepchemdataset static method)": [[3, "alien.data.deepchem.DeepChemDataset.from_data"]], "from_deepchem() (alien.data.dataset.arraydataset static method)": [[3, "alien.data.dataset.ArrayDataset.from_deepchem"]], "from_deepchem() (alien.data.dataset.dictdataset static method)": [[3, "alien.data.dataset.DictDataset.from_deepchem"]], "from_deepchem() (alien.data.dataset.numpydataset static method)": [[3, "alien.data.dataset.NumpyDataset.from_deepchem"]], "from_deepchem() (alien.data.dataset.shuffleddataset static method)": [[3, "alien.data.dataset.ShuffledDataset.from_deepchem"]], "from_deepchem() (alien.data.dataset.teachabledataset static method)": [[3, "alien.data.dataset.TeachableDataset.from_deepchem"]], "from_deepchem() (alien.data.dataset.teachablewrapperdataset static method)": [[3, "alien.data.dataset.TeachableWrapperDataset.from_deepchem"]], "from_deepchem() (alien.data.dataset.torchdataset static method)": [[3, "alien.data.dataset.TorchDataset.from_deepchem"]], "from_deepchem() (alien.data.dataset.tupledataset static method)": [[3, "alien.data.dataset.TupleDataset.from_deepchem"]], "from_deepchem() (alien.data.deepchem.deepchemdataset static method)": [[3, "alien.data.deepchem.DeepChemDataset.from_deepchem"]], "from_df() (alien.data.deepchem.deepchemdataset static method)": [[3, "alien.data.deepchem.DeepChemDataset.from_df"]], "get_featurizer() (alien.data.deepchem.deepchemdataset static method)": [[3, "alien.data.deepchem.DeepChemDataset.get_featurizer"]], "get_shuffle() (alien.data.dataset.arraydataset method)": [[3, "alien.data.dataset.ArrayDataset.get_shuffle"]], "get_shuffle() (alien.data.dataset.dictdataset method)": [[3, "alien.data.dataset.DictDataset.get_shuffle"]], "get_shuffle() (alien.data.dataset.numpydataset method)": [[3, "alien.data.dataset.NumpyDataset.get_shuffle"]], "get_shuffle() (alien.data.dataset.shuffleddataset method)": [[3, "alien.data.dataset.ShuffledDataset.get_shuffle"]], "get_shuffle() (alien.data.dataset.teachabledataset method)": [[3, "alien.data.dataset.TeachableDataset.get_shuffle"]], "get_shuffle() (alien.data.dataset.teachablewrapperdataset method)": [[3, "alien.data.dataset.TeachableWrapperDataset.get_shuffle"]], "get_shuffle() (alien.data.dataset.torchdataset method)": [[3, "alien.data.dataset.TorchDataset.get_shuffle"]], "get_shuffle() (alien.data.dataset.tupledataset method)": [[3, "alien.data.dataset.TupleDataset.get_shuffle"]], "get_shuffle() (alien.data.deepchem.deepchemdataset method)": [[3, "alien.data.deepchem.DeepChemDataset.get_shuffle"]], "ndim (alien.data.dataset.arraydataset property)": [[3, "alien.data.dataset.ArrayDataset.ndim"]], "ndim (alien.data.dataset.dataset property)": [[3, "alien.data.dataset.Dataset.ndim"]], "ndim (alien.data.dataset.dictdataset property)": [[3, "alien.data.dataset.DictDataset.ndim"]], "ndim (alien.data.dataset.numpydataset property)": [[3, "alien.data.dataset.NumpyDataset.ndim"]], "ndim (alien.data.dataset.shuffleddataset property)": [[3, "alien.data.dataset.ShuffledDataset.ndim"]], "ndim (alien.data.dataset.teachabledataset property)": [[3, "alien.data.dataset.TeachableDataset.ndim"]], "ndim (alien.data.dataset.teachablewrapperdataset property)": [[3, "alien.data.dataset.TeachableWrapperDataset.ndim"]], "ndim (alien.data.dataset.torchdataset property)": [[3, "alien.data.dataset.TorchDataset.ndim"]], "ndim (alien.data.dataset.tupledataset property)": [[3, "alien.data.dataset.TupleDataset.ndim"]], "ndim (alien.data.deepchem.deepchemdataset property)": [[3, "alien.data.deepchem.DeepChemDataset.ndim"]], "reshape() (alien.data.dataset.arraydataset method)": [[3, "alien.data.dataset.ArrayDataset.reshape"]], "reshape() (alien.data.dataset.dataset method)": [[3, "alien.data.dataset.Dataset.reshape"]], "reshape() (alien.data.dataset.dictdataset method)": [[3, "alien.data.dataset.DictDataset.reshape"]], "reshape() (alien.data.dataset.numpydataset method)": [[3, "alien.data.dataset.NumpyDataset.reshape"]], "reshape() (alien.data.dataset.shuffleddataset method)": [[3, "alien.data.dataset.ShuffledDataset.reshape"]], "reshape() (alien.data.dataset.teachabledataset method)": [[3, "alien.data.dataset.TeachableDataset.reshape"]], "reshape() (alien.data.dataset.teachablewrapperdataset method)": [[3, "alien.data.dataset.TeachableWrapperDataset.reshape"]], "reshape() (alien.data.dataset.torchdataset method)": [[3, "alien.data.dataset.TorchDataset.reshape"]], "reshape() (alien.data.dataset.tupledataset method)": [[3, "alien.data.dataset.TupleDataset.reshape"]], "reshape() (alien.data.deepchem.deepchemdataset method)": [[3, "alien.data.deepchem.DeepChemDataset.reshape"]], "reshape_batch() (alien.data.dataset.arraydataset method)": [[3, "alien.data.dataset.ArrayDataset.reshape_batch"]], "reshape_batch() (alien.data.dataset.dictdataset method)": [[3, "alien.data.dataset.DictDataset.reshape_batch"]], "reshape_batch() (alien.data.dataset.numpydataset method)": [[3, "alien.data.dataset.NumpyDataset.reshape_batch"]], "reshape_batch() (alien.data.dataset.shuffleddataset method)": [[3, "alien.data.dataset.ShuffledDataset.reshape_batch"]], "reshape_batch() (alien.data.dataset.teachablewrapperdataset method)": [[3, "alien.data.dataset.TeachableWrapperDataset.reshape_batch"]], "reshape_batch() (alien.data.dataset.torchdataset method)": [[3, "alien.data.dataset.TorchDataset.reshape_batch"]], "reshape_batch() (alien.data.dataset.tupledataset method)": [[3, "alien.data.dataset.TupleDataset.reshape_batch"]], "reshape_batch() (alien.data.deepchem.deepchemdataset method)": [[3, "alien.data.deepchem.DeepChemDataset.reshape_batch"]], "reshape_features() (alien.data.dataset.arraydataset method)": [[3, "alien.data.dataset.ArrayDataset.reshape_features"]], "reshape_features() (alien.data.dataset.dictdataset method)": [[3, "alien.data.dataset.DictDataset.reshape_features"]], "reshape_features() (alien.data.dataset.numpydataset method)": [[3, "alien.data.dataset.NumpyDataset.reshape_features"]], "reshape_features() (alien.data.dataset.shuffleddataset method)": [[3, "alien.data.dataset.ShuffledDataset.reshape_features"]], "reshape_features() (alien.data.dataset.teachablewrapperdataset method)": [[3, "alien.data.dataset.TeachableWrapperDataset.reshape_features"]], "reshape_features() (alien.data.dataset.torchdataset method)": [[3, "alien.data.dataset.TorchDataset.reshape_features"]], "reshape_features() (alien.data.dataset.tupledataset method)": [[3, "alien.data.dataset.TupleDataset.reshape_features"]], "reshape_features() (alien.data.deepchem.deepchemdataset method)": [[3, "alien.data.deepchem.DeepChemDataset.reshape_features"]], "reshuffle() (alien.data.dataset.shuffleddataset method)": [[3, "alien.data.dataset.ShuffledDataset.reshuffle"]], "shape (alien.data.dataset.arraydataset property)": [[3, "alien.data.dataset.ArrayDataset.shape"]], "shape (alien.data.dataset.dataset property)": [[3, "alien.data.dataset.Dataset.shape"]], "shape (alien.data.dataset.dictdataset property)": [[3, "alien.data.dataset.DictDataset.shape"]], "shape (alien.data.dataset.numpydataset property)": [[3, "alien.data.dataset.NumpyDataset.shape"]], "shape (alien.data.dataset.shuffleddataset property)": [[3, "alien.data.dataset.ShuffledDataset.shape"]], "shape (alien.data.dataset.teachabledataset property)": [[3, "alien.data.dataset.TeachableDataset.shape"]], "shape (alien.data.dataset.teachablewrapperdataset property)": [[3, "alien.data.dataset.TeachableWrapperDataset.shape"]], "shape (alien.data.dataset.torchdataset property)": [[3, "alien.data.dataset.TorchDataset.shape"]], "shape (alien.data.dataset.tupledataset property)": [[3, "alien.data.dataset.TupleDataset.shape"]], "shape (alien.data.deepchem.deepchemdataset property)": [[3, "alien.data.deepchem.DeepChemDataset.shape"]], "tuple (alien.data.dataset.tupledataset property)": [[3, "alien.data.dataset.TupleDataset.tuple"]], "y (alien.data.dataset.arraydataset property)": [[3, "alien.data.dataset.ArrayDataset.y"]], "y (alien.data.dataset.dataset property)": [[3, "alien.data.dataset.Dataset.y"]], "y (alien.data.dataset.dictdataset property)": [[3, "alien.data.dataset.DictDataset.y"]], "y (alien.data.dataset.numpydataset property)": [[3, "alien.data.dataset.NumpyDataset.y"]], "y (alien.data.dataset.shuffleddataset property)": [[3, "alien.data.dataset.ShuffledDataset.y"]], "y (alien.data.dataset.teachabledataset property)": [[3, "alien.data.dataset.TeachableDataset.y"]], "y (alien.data.dataset.teachablewrapperdataset property)": [[3, "alien.data.dataset.TeachableWrapperDataset.y"]], "y (alien.data.dataset.torchdataset property)": [[3, "alien.data.dataset.TorchDataset.y"]], "y (alien.data.dataset.tupledataset property)": [[3, "alien.data.dataset.TupleDataset.y"]], "y (alien.data.deepchem.deepchemdataset property)": [[3, "alien.data.deepchem.DeepChemDataset.y"]], "covarianceregressor (class in alien.models)": [[4, "alien.models.CovarianceRegressor"]], "ensembleregressor (class in alien.models)": [[4, "alien.models.EnsembleRegressor"]], "model (class in alien.models)": [[4, "alien.models.Model"]], "regressor (class in alien.models)": [[4, "alien.models.Regressor"]], "alien.models": [[4, "module-alien.models"]], "covariance() (alien.models.covarianceregressor method)": [[4, "alien.models.CovarianceRegressor.covariance"]], "covariance() (alien.models.ensembleregressor method)": [[4, "alien.models.EnsembleRegressor.covariance"]], "covariance_ensemble() (alien.models.ensembleregressor method)": [[4, "alien.models.EnsembleRegressor.covariance_ensemble"]], "fit() (alien.models.covarianceregressor method)": [[4, "alien.models.CovarianceRegressor.fit"]], "fit() (alien.models.ensembleregressor method)": [[4, "alien.models.EnsembleRegressor.fit"]], "fit() (alien.models.model method)": [[4, "alien.models.Model.fit"]], "fit() (alien.models.regressor method)": [[4, "alien.models.Regressor.fit"]], "fit_model() (alien.models.covarianceregressor method)": [[4, "alien.models.CovarianceRegressor.fit_model"]], "fit_model() (alien.models.ensembleregressor method)": [[4, "alien.models.EnsembleRegressor.fit_model"]], "fit_model() (alien.models.model method)": [[4, "alien.models.Model.fit_model"]], "fit_model() (alien.models.regressor method)": [[4, "alien.models.Regressor.fit_model"]], "fit_uncertainty() (alien.models.covarianceregressor method)": [[4, "alien.models.CovarianceRegressor.fit_uncertainty"]], "fit_uncertainty() (alien.models.ensembleregressor method)": [[4, "alien.models.EnsembleRegressor.fit_uncertainty"]], "fit_uncertainty() (alien.models.model method)": [[4, "alien.models.Model.fit_uncertainty"]], "fit_uncertainty() (alien.models.regressor method)": [[4, "alien.models.Regressor.fit_uncertainty"]], "initialize() (alien.models.covarianceregressor method)": [[4, "alien.models.CovarianceRegressor.initialize"]], "initialize() (alien.models.ensembleregressor method)": [[4, "alien.models.EnsembleRegressor.initialize"]], "initialize() (alien.models.model method)": [[4, "alien.models.Model.initialize"]], "initialize() (alien.models.regressor method)": [[4, "alien.models.Regressor.initialize"]], "load() (alien.models.covarianceregressor static method)": [[4, "alien.models.CovarianceRegressor.load"]], "load() (alien.models.ensembleregressor static method)": [[4, "alien.models.EnsembleRegressor.load"]], "load() (alien.models.model static method)": [[4, "alien.models.Model.load"]], "load() (alien.models.regressor static method)": [[4, "alien.models.Regressor.load"]], "ndim (alien.models.covarianceregressor property)": [[4, "alien.models.CovarianceRegressor.ndim"]], "ndim (alien.models.ensembleregressor property)": [[4, "alien.models.EnsembleRegressor.ndim"]], "ndim (alien.models.model property)": [[4, "alien.models.Model.ndim"]], "ndim (alien.models.regressor property)": [[4, "alien.models.Regressor.ndim"]], "predict() (alien.models.covarianceregressor method)": [[4, "alien.models.CovarianceRegressor.predict"]], "predict() (alien.models.ensembleregressor method)": [[4, "alien.models.EnsembleRegressor.predict"]], "predict() (alien.models.model method)": [[4, "alien.models.Model.predict"]], "predict() (alien.models.regressor method)": [[4, "alien.models.Regressor.predict"]], "predict_ensemble() (alien.models.covarianceregressor method)": [[4, "alien.models.CovarianceRegressor.predict_ensemble"]], "predict_ensemble() (alien.models.ensembleregressor method)": [[4, "alien.models.EnsembleRegressor.predict_ensemble"]], "predict_samples() (alien.models.covarianceregressor method)": [[4, "alien.models.CovarianceRegressor.predict_samples"]], "predict_samples() (alien.models.ensembleregressor method)": [[4, "alien.models.EnsembleRegressor.predict_samples"]], "predict_samples() (alien.models.model method)": [[4, "alien.models.Model.predict_samples"]], "predict_samples() (alien.models.regressor method)": [[4, "alien.models.Regressor.predict_samples"]], "save() (alien.models.covarianceregressor method)": [[4, "alien.models.CovarianceRegressor.save"]], "save() (alien.models.ensembleregressor method)": [[4, "alien.models.EnsembleRegressor.save"]], "save() (alien.models.model method)": [[4, "alien.models.Model.save"]], "save() (alien.models.regressor method)": [[4, "alien.models.Regressor.save"]], "shape (alien.models.covarianceregressor property)": [[4, "alien.models.CovarianceRegressor.shape"]], "shape (alien.models.ensembleregressor property)": [[4, "alien.models.EnsembleRegressor.shape"]], "shape (alien.models.model property)": [[4, "alien.models.Model.shape"]], "shape (alien.models.regressor property)": [[4, "alien.models.Regressor.shape"]], "std_dev() (alien.models.covarianceregressor method)": [[4, "alien.models.CovarianceRegressor.std_dev"]], "std_dev() (alien.models.ensembleregressor method)": [[4, "alien.models.EnsembleRegressor.std_dev"]], "std_dev_ensemble() (alien.models.ensembleregressor method)": [[4, "alien.models.EnsembleRegressor.std_dev_ensemble"]], "kerasregressor (class in alien.models.keras.keras)": [[5, "alien.models.keras.keras.KerasRegressor"]], "alien.models.keras": [[5, "module-alien.models.keras"]], "alien.models.keras.keras": [[5, "module-alien.models.keras.keras"]], "alien.models.keras.utils": [[5, "module-alien.models.keras.utils"]], "covariance() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.covariance"]], "covariance_ensemble() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.covariance_ensemble"]], "data (alien.models.keras.keras.kerasregressor property)": [[5, "alien.models.keras.keras.KerasRegressor.data"]], "dropout_call() (in module alien.models.keras.utils)": [[5, "alien.models.keras.utils.dropout_call"]], "fit() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.fit"]], "fit_model() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.fit_model"]], "fit_uncertainty() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.fit_uncertainty"]], "fix_dropouts() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.fix_dropouts"]], "get_mod_layers() (in module alien.models.keras.utils)": [[5, "alien.models.keras.utils.get_mod_layers"]], "get_weights() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.get_weights"]], "humble_batchnorm_call() (in module alien.models.keras.utils)": [[5, "alien.models.keras.utils.humble_batchnorm_call"]], "initialize() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.initialize"]], "load() (alien.models.keras.keras.kerasregressor static method)": [[5, "alien.models.keras.keras.KerasRegressor.load"]], "modify_dropout() (in module alien.models.keras.utils)": [[5, "alien.models.keras.utils.modify_dropout"]], "ndim (alien.models.keras.keras.kerasregressor property)": [[5, "alien.models.keras.keras.KerasRegressor.ndim"]], "predict() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.predict"]], "predict_ensemble() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.predict_ensemble"]], "predict_samples() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.predict_samples"]], "save() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.save"]], "save_initial_weights() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.save_initial_weights"]], "set_weights() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.set_weights"]], "shape (alien.models.keras.keras.kerasregressor property)": [[5, "alien.models.keras.keras.KerasRegressor.shape"]], "std_dev() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.std_dev"]], "std_dev_ensemble() (alien.models.keras.keras.kerasregressor method)": [[5, "alien.models.keras.keras.KerasRegressor.std_dev_ensemble"]], "subobjects() (in module alien.models.keras.utils)": [[5, "alien.models.keras.utils.subobjects"]], "lastlayerpytorchlinearization (class in alien.models.pytorch.last_layer)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization"]], "pytorchregressor (class in alien.models.pytorch.pytorch)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor"]], "stdlimit (class in alien.models.pytorch.training_limits)": [[6, "alien.models.pytorch.training_limits.StdLimit"]], "traininglimit (class in alien.models.pytorch.training_limits)": [[6, "alien.models.pytorch.training_limits.TrainingLimit"]], "alien.models.pytorch": [[6, "module-alien.models.pytorch"]], "alien.models.pytorch.last_layer": [[6, "module-alien.models.pytorch.last_layer"]], "alien.models.pytorch.pytorch": [[6, "module-alien.models.pytorch.pytorch"]], "alien.models.pytorch.training_limits": [[6, "module-alien.models.pytorch.training_limits"]], "alien.models.pytorch.utils": [[6, "module-alien.models.pytorch.utils"]], "as_tensor() (in module alien.models.pytorch.utils)": [[6, "alien.models.pytorch.utils.as_tensor"]], "batch_limit() (alien.models.pytorch.training_limits.stdlimit method)": [[6, "alien.models.pytorch.training_limits.StdLimit.batch_limit"]], "batch_limit() (alien.models.pytorch.training_limits.traininglimit method)": [[6, "alien.models.pytorch.training_limits.TrainingLimit.batch_limit"]], "batches (alien.models.pytorch.training_limits.stdlimit attribute)": [[6, "alien.models.pytorch.training_limits.StdLimit.batches"]], "batches (alien.models.pytorch.training_limits.traininglimit attribute)": [[6, "alien.models.pytorch.training_limits.TrainingLimit.batches"]], "covariance() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.covariance"]], "covariance() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.covariance"]], "covariance_ensemble() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.covariance_ensemble"]], "covariance_laplace() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.covariance_laplace"]], "covariance_linear() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.covariance_linear"]], "covariance_linear() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.covariance_linear"]], "data (alien.models.pytorch.last_layer.lastlayerpytorchlinearization property)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.data"]], "data (alien.models.pytorch.pytorch.pytorchregressor property)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.data"]], "dropout_forward() (in module alien.models.pytorch.utils)": [[6, "alien.models.pytorch.utils.dropout_forward"]], "dtype (alien.models.pytorch.pytorch.pytorchregressor property)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.dtype"]], "embedding_method (alien.models.pytorch.last_layer.lastlayerpytorchlinearization property)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.embedding_method"]], "embedding_method (alien.models.pytorch.pytorch.pytorchregressor property)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.embedding_method"]], "epochs (alien.models.pytorch.training_limits.stdlimit attribute)": [[6, "alien.models.pytorch.training_limits.StdLimit.epochs"]], "epochs (alien.models.pytorch.training_limits.traininglimit attribute)": [[6, "alien.models.pytorch.training_limits.TrainingLimit.epochs"]], "find_last_layer() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.find_last_layer"]], "find_last_layer() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.find_last_layer"]], "find_method() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.find_method"]], "find_method() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.find_method"]], "fit() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.fit"]], "fit() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.fit"]], "fit_laplace() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.fit_laplace"]], "fit_model() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.fit_model"]], "fit_model() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.fit_model"]], "fit_uncertainty() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.fit_uncertainty"]], "fit_uncertainty() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.fit_uncertainty"]], "fix_dropouts() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.fix_dropouts"]], "get_lightning_trainer() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.get_lightning_trainer"]], "get_training_limit() (in module alien.models.pytorch.training_limits)": [[6, "alien.models.pytorch.training_limits.get_training_limit"]], "init_bias() (in module alien.models.pytorch.pytorch)": [[6, "alien.models.pytorch.pytorch.init_bias"]], "init_weights() (in module alien.models.pytorch.pytorch)": [[6, "alien.models.pytorch.pytorch.init_weights"]], "initialize() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.initialize"]], "initialize() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.initialize"]], "input_embedding() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.input_embedding"]], "input_embedding() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.input_embedding"]], "last_layer_embedding() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.last_layer_embedding"]], "last_layer_embedding() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.last_layer_embedding"]], "linearization() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.linearization"]], "linearization() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.linearization"]], "load() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization static method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.load"]], "load() (alien.models.pytorch.pytorch.pytorchregressor static method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.load"]], "max_epochs (alien.models.pytorch.training_limits.stdlimit attribute)": [[6, "alien.models.pytorch.training_limits.StdLimit.max_epochs"]], "max_epochs (alien.models.pytorch.training_limits.traininglimit attribute)": [[6, "alien.models.pytorch.training_limits.TrainingLimit.max_epochs"]], "max_samples (alien.models.pytorch.training_limits.stdlimit attribute)": [[6, "alien.models.pytorch.training_limits.StdLimit.max_samples"]], "max_samples (alien.models.pytorch.training_limits.traininglimit attribute)": [[6, "alien.models.pytorch.training_limits.TrainingLimit.max_samples"]], "method_names (alien.models.pytorch.last_layer.lastlayerpytorchlinearization attribute)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.method_names"]], "method_names (alien.models.pytorch.pytorch.pytorchregressor attribute)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.method_names"]], "min_epochs (alien.models.pytorch.training_limits.stdlimit attribute)": [[6, "alien.models.pytorch.training_limits.StdLimit.min_epochs"]], "min_epochs (alien.models.pytorch.training_limits.traininglimit attribute)": [[6, "alien.models.pytorch.training_limits.TrainingLimit.min_epochs"]], "min_samples (alien.models.pytorch.training_limits.stdlimit attribute)": [[6, "alien.models.pytorch.training_limits.StdLimit.min_samples"]], "min_samples (alien.models.pytorch.training_limits.traininglimit attribute)": [[6, "alien.models.pytorch.training_limits.TrainingLimit.min_samples"]], "ndim (alien.models.pytorch.last_layer.lastlayerpytorchlinearization property)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.ndim"]], "ndim (alien.models.pytorch.pytorch.pytorchregressor property)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.ndim"]], "predict() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.predict"]], "predict() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.predict"]], "predict_ensemble() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.predict_ensemble"]], "predict_ensemble() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.predict_ensemble"]], "predict_linear() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.predict_linear"]], "predict_linear() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.predict_linear"]], "predict_samples() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.predict_samples"]], "predict_samples() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.predict_samples"]], "predict_with_embedding() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.predict_with_embedding"]], "predict_with_embedding() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.predict_with_embedding"]], "sample_limit() (alien.models.pytorch.training_limits.stdlimit method)": [[6, "alien.models.pytorch.training_limits.StdLimit.sample_limit"]], "sample_limit() (alien.models.pytorch.training_limits.traininglimit method)": [[6, "alien.models.pytorch.training_limits.TrainingLimit.sample_limit"]], "samples (alien.models.pytorch.training_limits.stdlimit attribute)": [[6, "alien.models.pytorch.training_limits.StdLimit.samples"]], "samples (alien.models.pytorch.training_limits.traininglimit attribute)": [[6, "alien.models.pytorch.training_limits.TrainingLimit.samples"]], "save() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.save"]], "save() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.save"]], "set_last_layer() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.set_last_layer"]], "set_last_layer() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.set_last_layer"]], "shape (alien.models.pytorch.last_layer.lastlayerpytorchlinearization property)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.shape"]], "shape (alien.models.pytorch.pytorch.pytorchregressor property)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.shape"]], "std_dev() (alien.models.pytorch.last_layer.lastlayerpytorchlinearization method)": [[6, "alien.models.pytorch.last_layer.LastLayerPytorchLinearization.std_dev"]], "std_dev() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.std_dev"]], "std_dev_ensemble() (alien.models.pytorch.pytorch.pytorchregressor method)": [[6, "alien.models.pytorch.pytorch.PytorchRegressor.std_dev_ensemble"]], "submodules() (in module alien.models.pytorch.utils)": [[6, "alien.models.pytorch.utils.submodules"]], "filter (class in alien.sample_generation.filter_generator)": [[7, "alien.sample_generation.filter_generator.Filter"]], "randomsamplegenerator (class in alien.sample_generation.random_generator)": [[7, "alien.sample_generation.random_generator.RandomSampleGenerator"]], "samplegenerator (class in alien.sample_generation.generator)": [[7, "alien.sample_generation.generator.SampleGenerator"]], "setsamplegenerator (class in alien.sample_generation.from_set)": [[7, "alien.sample_generation.from_set.SetSampleGenerator"]], "transformedsamplegenerator (class in alien.sample_generation.transformation)": [[7, "alien.sample_generation.transformation.TransformedSampleGenerator"]], "uniformsamplegenerator (class in alien.sample_generation.random_generator)": [[7, "alien.sample_generation.random_generator.UniformSampleGenerator"]], "wrappedgenerator (class in alien.sample_generation.from_set)": [[7, "alien.sample_generation.from_set.WrappedGenerator"]], "alien.sample_generation": [[7, "module-alien.sample_generation"]], "alien.sample_generation.filter_generator": [[7, "module-alien.sample_generation.filter_generator"]], "alien.sample_generation.from_set": [[7, "module-alien.sample_generation.from_set"]], "alien.sample_generation.generator": [[7, "module-alien.sample_generation.generator"]], "alien.sample_generation.random_generator": [[7, "module-alien.sample_generation.random_generator"]], "alien.sample_generation.transformation": [[7, "module-alien.sample_generation.transformation"]], "generate_sample() (alien.sample_generation.filter_generator.filter method)": [[7, "alien.sample_generation.filter_generator.Filter.generate_sample"]], "generate_sample() (alien.sample_generation.from_set.setsamplegenerator method)": [[7, "alien.sample_generation.from_set.SetSampleGenerator.generate_sample"]], "generate_sample() (alien.sample_generation.from_set.wrappedgenerator method)": [[7, "alien.sample_generation.from_set.WrappedGenerator.generate_sample"]], "generate_sample() (alien.sample_generation.generator.samplegenerator method)": [[7, "alien.sample_generation.generator.SampleGenerator.generate_sample"]], "generate_sample() (alien.sample_generation.random_generator.randomsamplegenerator method)": [[7, "alien.sample_generation.random_generator.RandomSampleGenerator.generate_sample"]], "generate_sample() (alien.sample_generation.random_generator.uniformsamplegenerator method)": [[7, "alien.sample_generation.random_generator.UniformSampleGenerator.generate_sample"]], "generate_sample() (alien.sample_generation.transformation.transformedsamplegenerator method)": [[7, "alien.sample_generation.transformation.TransformedSampleGenerator.generate_sample"]], "generate_samples() (alien.sample_generation.filter_generator.filter method)": [[7, "alien.sample_generation.filter_generator.Filter.generate_samples"]], "generate_samples() (alien.sample_generation.from_set.setsamplegenerator method)": [[7, "alien.sample_generation.from_set.SetSampleGenerator.generate_samples"]], "generate_samples() (alien.sample_generation.from_set.wrappedgenerator method)": [[7, "alien.sample_generation.from_set.WrappedGenerator.generate_samples"]], "generate_samples() (alien.sample_generation.generator.samplegenerator method)": [[7, "alien.sample_generation.generator.SampleGenerator.generate_samples"]], "generate_samples() (alien.sample_generation.random_generator.randomsamplegenerator method)": [[7, "alien.sample_generation.random_generator.RandomSampleGenerator.generate_samples"]], "generate_samples() (alien.sample_generation.random_generator.uniformsamplegenerator method)": [[7, "alien.sample_generation.random_generator.UniformSampleGenerator.generate_samples"]], "generate_samples() (alien.sample_generation.transformation.transformedsamplegenerator method)": [[7, "alien.sample_generation.transformation.TransformedSampleGenerator.generate_samples"]], "labels (alien.sample_generation.from_set.setsamplegenerator property)": [[7, "alien.sample_generation.from_set.SetSampleGenerator.labels"]], "remove_data_indices() (alien.sample_generation.from_set.setsamplegenerator method)": [[7, "alien.sample_generation.from_set.SetSampleGenerator.remove_data_indices"]], "remove_sample() (alien.sample_generation.from_set.setsamplegenerator method)": [[7, "alien.sample_generation.from_set.SetSampleGenerator.remove_sample"]], "remove_samples() (alien.sample_generation.from_set.setsamplegenerator method)": [[7, "alien.sample_generation.from_set.SetSampleGenerator.remove_samples"]], "reshuffle() (alien.sample_generation.from_set.setsamplegenerator method)": [[7, "alien.sample_generation.from_set.SetSampleGenerator.reshuffle"]], "baitselector (class in alien.selection)": [[8, "alien.selection.BAITSelector"]], "covarianceselector (class in alien.selection)": [[8, "alien.selection.CovarianceSelector"]], "kmeansselector (class in alien.selection)": [[8, "alien.selection.KmeansSelector"]], "randomselector (class in alien.selection)": [[8, "alien.selection.RandomSelector"]], "sampleselector (class in alien.selection)": [[8, "alien.selection.SampleSelector"]], "timestampselector (class in alien.selection)": [[8, "alien.selection.TimestampSelector"]], "alien.selection": [[8, "module-alien.selection"]], "get_prefilter() (alien.selection.covarianceselector method)": [[8, "alien.selection.CovarianceSelector.get_prefilter"]], "model_predict() (alien.selection.baitselector method)": [[8, "alien.selection.BAITSelector.model_predict"]], "model_predict() (alien.selection.covarianceselector method)": [[8, "alien.selection.CovarianceSelector.model_predict"]], "model_predict() (alien.selection.kmeansselector method)": [[8, "alien.selection.KmeansSelector.model_predict"]], "model_predict() (alien.selection.randomselector method)": [[8, "alien.selection.RandomSelector.model_predict"]], "model_predict() (alien.selection.timestampselector method)": [[8, "alien.selection.TimestampSelector.model_predict"]], "prediction_prior() (alien.selection.baitselector method)": [[8, "alien.selection.BAITSelector.prediction_prior"]], "prediction_prior() (alien.selection.covarianceselector method)": [[8, "alien.selection.CovarianceSelector.prediction_prior"]], "prediction_prior() (alien.selection.kmeansselector method)": [[8, "alien.selection.KmeansSelector.prediction_prior"]], "prediction_prior() (alien.selection.randomselector method)": [[8, "alien.selection.RandomSelector.prediction_prior"]], "prediction_prior() (alien.selection.timestampselector method)": [[8, "alien.selection.TimestampSelector.prediction_prior"]], "select() (alien.selection.baitselector method)": [[8, "alien.selection.BAITSelector.select"]], "select() (alien.selection.covarianceselector method)": [[8, "alien.selection.CovarianceSelector.select"]], "select() (alien.selection.kmeansselector method)": [[8, "alien.selection.KmeansSelector.select"]], "select() (alien.selection.randomselector method)": [[8, "alien.selection.RandomSelector.select"]], "select() (alien.selection.sampleselector method)": [[8, "alien.selection.SampleSelector.select"]], "select() (alien.selection.timestampselector method)": [[8, "alien.selection.TimestampSelector.select"]], "docs": [[9, "module-docs"]]}})